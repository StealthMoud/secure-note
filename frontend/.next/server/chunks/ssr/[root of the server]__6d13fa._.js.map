{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 111, "column": 0}, "map": {"version":3,"sources":["file:///app/src/services/api.ts"],"sourcesContent":["import axios from 'axios';\n\nconst API_URL = process.env.NEXT_PUBLIC_BACKEND_URL;\n\nexport const api = axios.create({\n    baseURL: `${API_URL}/api`,\n    timeout: 5000,\n    headers: {\n        'Content-Type': 'application/json',\n    },\n});\n\nexport default api;\n\n"],"names":[],"mappings":";;;;AAAA;;AAEA,MAAM;AAEC,MAAM,MAAM,qIAAA,CAAA,UAAK,CAAC,MAAM,CAAC;IAC5B,SAAS,GAAG,QAAQ,IAAI,CAAC;IACzB,SAAS;IACT,SAAS;QACL,gBAAgB;IACpB;AACJ;uCAEe"}},
    {"offset": {"line": 126, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 132, "column": 0}, "map": {"version":3,"sources":["file:///app/src/services/auth.ts"],"sourcesContent":["import api from './api';\n\ninterface User {\n    _id: string;\n    username: string;\n    email: string;\n    role: string;\n}\n\ninterface LoginResponse {\n    token: string;\n    user: User;\n}\n\ninterface RegisterResponse {\n    message: string;\n}\n\ninterface UserResponse {\n    user: User;\n    role: string;\n}\n\ninterface VerifyEmailResponse {\n    message: string;\n}\n\n\nexport const registerUser = async (\n    username: string,\n    email: string,\n    password: string,\n    confirmPassword: string\n): Promise<RegisterResponse> => {\n    try {\n        const response = await api.post<RegisterResponse>('/auth/register', {\n            username,\n            email,\n            password,\n            confirmPassword,\n        });\n        return response.data;\n    } catch (error: any) {\n        if (error.response?.data?.errors) {\n            const fieldErrors: Record<string, string> = {};\n            error.response.data.errors.forEach((err: any) => {\n                fieldErrors[err.path || err.param] = err.msg;\n            });\n            throw { fieldErrors };\n        }\n        throw new Error(error.response?.data?.error || 'Registration failed');\n    }\n};\n\n\n\nexport const loginUser = async (identifier: string, password: string): Promise<LoginResponse> => {\n    try {\n        const response = await api.post<LoginResponse>('/auth/login', {identifier, password});\n        return response.data;\n    } catch (error: any) {\n        if (error.response?.data?.errors) {\n            const fieldErrors: Record<string, string> = {};\n            error.response.data.errors.forEach((err: any) => {\n                fieldErrors[err.path || err.param] = err.msg;\n            });\n            throw { fieldErrors };\n        }\n        throw new Error(error.response?.data?.error || 'Login failed');\n    }\n};\n\nexport const initiateOAuthLogin = async (provider: 'google' | 'github'): Promise<void> => {\n    // Since this is a redirect, we donâ€™t need to handle the response here\n    // The browser will handle the redirect to the backend OAuth endpoint\n    window.location.href = `${process.env.NEXT_PUBLIC_BACKEND_URL}/api/auth/${provider}`;\n};\n\n\n\n\n    export const requestPasswordReset = async (email: string): Promise<{ message: string }> => {\n    try {\n        const response = await api.post<{ message: string }>('/auth/request-password-reset', { email });\n        return response.data;\n    } catch (error: any) {\n        if (error.response?.data?.errors) {\n            const fieldErrors: Record<string, string> = {};\n            error.response.data.errors.forEach((err: any) => {\n                fieldErrors[err.path || err.param] = err.msg;\n            });\n            throw { fieldErrors };\n        }\n        throw new Error(error.response?.data?.error || 'Failed to request password reset');\n    }\n};\n\nexport const resetPassword = async (token: string, newPassword: string): Promise<{ message: string }> => {\n    try {\n        const response = await api.post<{ message: string }>('/auth/reset-password', { token, newPassword });\n        return response.data;\n    } catch (error: any) {\n        if (error.response?.data?.errors) {\n            const fieldErrors: Record<string, string> = {};\n            error.response.data.errors.forEach((err: any) => {\n                fieldErrors[err.path || err.param] = err.msg;\n            });\n            throw { fieldErrors };\n        }\n        throw new Error(error.response?.data?.error || 'Failed to reset password');\n    }\n};\n\n// Verify Email\nexport const verifyEmail = async (token: string): Promise<VerifyEmailResponse> => {\n    try {\n        const response = await api.get<VerifyEmailResponse>(`/auth/verify-email?token=${token}`);\n        return response.data; // Typed as VerifyEmailResponse\n    } catch (error: any) {\n        throw new Error(error.response?.data?.error || 'Email verification failed');\n    }\n};\n\n// Get Current User\nexport const getCurrentUser = async (token: string): Promise<UserResponse> => {\n    try {\n        const response = await api.get<UserResponse>('/users/me', {\n            headers: {Authorization: `Bearer ${token}`},\n        });\n        return response.data;\n    } catch (error: any) {\n        throw new Error(error.response?.data?.error || 'Failed to fetch user');\n    }\n};\n\nexport const requestVerification = async (): Promise<{ message: string }> => {\n    try {\n        const token = localStorage.getItem('token');\n        const response = await api.post<{ message: string }>('/auth/request-verification', {}, {\n            headers: {Authorization: `Bearer ${token}`},\n        });\n        return response.data;\n    } catch (error: any) {\n        throw new Error(error.response?.data?.error || 'Failed to request verification');\n    }\n};\n\nexport const approveVerification = async (userId: string): Promise<{ message: string }> => {\n    try {\n        const token = localStorage.getItem('token');\n        const response = await api.post<{ message: string }>('/auth/approve-verification', {userId}, {\n            headers: {Authorization: `Bearer ${token}`},\n        });\n        return response.data;\n    } catch (error: any) {\n        throw new Error(error.response?.data?.error || 'Failed to approve verification');\n    }\n};"],"names":[],"mappings":"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"}},
    {"offset": {"line": 279, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 285, "column": 0}, "map": {"version":3,"sources":["file:///app/app/login/page.tsx"],"sourcesContent":["'use client';\nimport {useEffect, useState} from 'react';\nimport {initiateOAuthLogin, loginUser} from '@/services/auth';\nimport Link from 'next/link';\nimport {useSearchParams} from 'next/navigation';\nimport {\n    CheckCircleIcon,\n    EyeIcon,\n    EyeSlashIcon,\n    KeyIcon,\n    LockClosedIcon,\n    UserIcon,\n    XCircleIcon,\n    XMarkIcon,\n} from '@heroicons/react/24/outline';\n\nexport default function LoginPage() {\n    const searchParams = useSearchParams();\n    const token = searchParams.get('token');\n\n    const [identifier, setIdentifier] = useState<string>('');\n    const [password, setPassword] = useState<string>('');\n    const [rememberMe, setRememberMe] = useState(false);\n    const [showPassword, setShowPassword] = useState(false);\n    const [loading, setLoading] = useState(false);\n\n    const [errors, setErrors] = useState<Record<string, string>>({});\n    const [fieldErrorVisibility, setFieldErrorVisibility] = useState<Record<string, boolean>>({});\n    const [error, setError] = useState<string>('');\n    const [message, setMessage] = useState<string>('');\n    const [isExitingError, setIsExitingError] = useState(false);\n    const [isExitingMessage, setIsExitingMessage] = useState(false);\n\n    // Client-side validation\n    const validateForm = () => {\n        const newErrors: Record<string, string> = {};\n        if (!identifier) newErrors.identifier = 'Email or Username is required';\n        if (!password) newErrors.password = 'Password is required';\n\n        if (Object.keys(newErrors).length > 0) {\n            setErrors(newErrors);\n            const visibility: Record<string, boolean> = {};\n            Object.keys(newErrors).forEach((field) => {\n                visibility[field] = true;\n                setTimeout(() => {\n                    setFieldErrorVisibility((prev) => ({...prev, [field]: false}));\n                    setTimeout(() => {\n                        setErrors((prev) => {\n                            const updatedErrors = {...prev};\n                            delete updatedErrors[field];\n                            return updatedErrors;\n                        });\n                    }, 500);\n                }, 3000);\n            });\n            setFieldErrorVisibility(visibility);\n        }\n        return Object.keys(newErrors).length === 0;\n    };\n\n    const handleLogin = async (e: React.FormEvent) => {\n        e.preventDefault();\n        if (!validateForm()) return;\n\n        setError('');\n        setFieldErrorVisibility({});\n        setMessage('');\n        setIsExitingError(false);\n        setIsExitingMessage(false);\n        setLoading(true);\n\n        try {\n            const data = await loginUser(identifier, password);\n            localStorage.setItem('token', data.token);\n            if (rememberMe) localStorage.setItem('rememberMe', 'true');\n            setMessage('Login successful! Redirecting...');\n            setTimeout(() => window.location.href = '/dashboard', 1000);\n        } catch (err: any) {\n            if (err.fieldErrors) {\n                setErrors(err.fieldErrors);\n                const visibility: Record<string, boolean> = {};\n                Object.keys(err.fieldErrors).forEach((field) => {\n                    visibility[field] = true;\n                    setTimeout(() => {\n                        setFieldErrorVisibility((prev) => ({...prev, [field]: false}));\n                        setTimeout(() => {\n                            setErrors((prev) => {\n                                const newErrors = {...prev};\n                                delete newErrors[field];\n                                return newErrors;\n                            });\n                        }, 500);\n                    }, 3000);\n                });\n                setFieldErrorVisibility(visibility);\n            } else {\n                setError(err.message || 'Login failed');\n            }\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    const handleOAuthLogin = async (provider: 'google' | 'github') => {\n        try {\n            setLoading(true);\n            await initiateOAuthLogin(provider);\n        } catch (err: any) {\n            setError(err.message || `Failed to initiate ${provider} login`);\n            setLoading(false);\n        }\n    };\n\n    const dismissFieldError = (field: string) => {\n        setFieldErrorVisibility((prev) => ({...prev, [field]: false}));\n        setTimeout(() => {\n            setErrors((prev) => {\n                const newErrors = {...prev};\n                delete newErrors[field];\n                return newErrors;\n            });\n        }, 500);\n    };\n\n    useEffect(() => {\n        document.title = 'Login | Secure Note';\n    }, []);\n\n    useEffect(() => {\n        if (token) {\n            localStorage.setItem('token', token);\n            setMessage('OAuth login successful! Redirecting...');\n            setTimeout(() => window.location.href = '/dashboard', 1000);\n        }\n    }, [token]);\n\n    useEffect(() => {\n        if (error && !isExitingError) {\n            const timer = setTimeout(() => {\n                setIsExitingError(true);\n                setTimeout(() => setError(''), 500);\n            }, 3000);\n            return () => clearTimeout(timer);\n        }\n    }, [error, isExitingError]);\n\n    useEffect(() => {\n        if (message && !isExitingMessage) {\n            const timer = setTimeout(() => {\n                setIsExitingMessage(true);\n                setTimeout(() => setMessage(''), 500);\n            }, 3000);\n            return () => clearTimeout(timer);\n        }\n    }, [message, isExitingMessage]);\n\n    return (\n        <div className=\"bg-white dark:bg-gray-800 p-8 rounded-2xl shadow-[0_0_10px_rgba(0,0,0,0.05)] dark:shadow-[0_0_10px_rgba(255,255,255,0.1)] border border-gray-200 dark:border-gray-700 text-center w-full max-w-md mx-auto my-12\">\n            <h1 className=\"text-3xl font-bold tracking-wide text-gray-900 dark:text-gray-100 mt-4 mb-6 flex items-center justify-center\">\n                <KeyIcon className=\"h-8 w-8 mr-2 text-gray-400 dark:text-gray-500\" />\n                Login\n            </h1>\n            <form onSubmit={handleLogin} className=\"space-y-4\" noValidate>\n                {/* Identifier Field */}\n                <div className=\"space-y-1\">\n                    <label htmlFor=\"identifier\" className=\"sr-only\">\n                        Email or Username\n                    </label>\n                    <div className=\"relative\">\n                        <UserIcon className=\"absolute left-3 top-1/2 transform -translate-y-1/2 h-5 w-5 text-gray-400 dark:text-gray-500 pointer-events-none\" />\n                        <input\n                            id=\"identifier\"\n                            type=\"text\"\n                            value={identifier}\n                            onChange={(e) => setIdentifier(e.target.value)}\n                            placeholder=\"Email or Username\"\n                            className=\"w-full pl-10 p-3 bg-gray-200 dark:bg-gray-700 text-gray-900 dark:text-gray-100 rounded-md focus:outline-none focus:ring-2 focus:ring-slate-600 dark:focus:ring-slate-500 transition duration-200\"\n                            aria-describedby=\"identifier-error\"\n                        />\n                    </div>\n                    {errors.identifier && (\n                        <p\n                            id=\"identifier-error\"\n                            className={`min-h-[18px] text-sm text-red-500 transition-opacity duration-300 ease-in-out flex items-center ${\n                                fieldErrorVisibility.identifier ? 'opacity-100 animate-fadeInShort' : 'opacity-0'\n                            }`}\n                        >\n                            {errors.identifier}\n                            <button onClick={() => dismissFieldError('identifier')} className=\"ml-2\">\n                                <XMarkIcon className=\"h-4 w-4 text-red-500\" />\n                            </button>\n                        </p>\n                    )}\n                </div>\n\n                {/* Password Field */}\n                <div className=\"space-y-1\">\n                    <label htmlFor=\"password\" className=\"sr-only\">\n                        Password\n                    </label>\n                    <div className=\"relative\">\n                        <LockClosedIcon className=\"absolute left-3 top-1/2 transform -translate-y-1/2 h-5 w-5 text-gray-400 dark:text-gray-500 pointer-events-none\" />\n                        <input\n                            id=\"password\"\n                            type={showPassword ? 'text' : 'password'}\n                            value={password}\n                            onChange={(e) => setPassword(e.target.value)}\n                            placeholder=\"Password\"\n                            className=\"w-full pl-10 pr-10 p-3 bg-gray-200 dark:bg-gray-700 text-gray-900 dark:text-gray-100 rounded-md focus:outline-none focus:ring-2 focus:ring-slate-600 dark:focus:ring-slate-500 transition duration-200\"\n                            aria-describedby=\"password-error\"\n                        />\n                        <button\n                            type=\"button\"\n                            onClick={() => setShowPassword(!showPassword)}\n                            className=\"absolute right-3 top-1/2 transform -translate-y-1/2 text-gray-400 dark:text-gray-500 hover:text-gray-600 dark:hover:text-gray-300\"\n                        >\n                            {showPassword ? <EyeSlashIcon className=\"h-5 w-5\" /> : <EyeIcon className=\"h-5 w-5\" />}\n                        </button>\n                    </div>\n                    {errors.password && (\n                        <p\n                            id=\"password-error\"\n                            className={`min-h-[18px] text-sm text-red-500 transition-opacity duration-300 ease-in-out flex items-center ${\n                                fieldErrorVisibility.password ? 'opacity-100 animate-fadeInShort' : 'opacity-0'\n                            }`}\n                        >\n                            {errors.password}\n                            <button onClick={() => dismissFieldError('password')} className=\"ml-2\">\n                                <XMarkIcon className=\"h-4 w-4 text-red-500\" />\n                            </button>\n                        </p>\n                    )}\n                </div>\n\n                {/* Remember Me and Forgot Password */}\n                <div className=\"flex justify-between items-center\">\n                    <label className=\"flex items-center text-sm text-gray-700 dark:text-gray-300\">\n                        <input\n                            type=\"checkbox\"\n                            checked={rememberMe}\n                            onChange={(e) => setRememberMe(e.target.checked)}\n                            className=\"mr-2 h-4 w-4 text-slate-600 focus:ring-slate-500\"\n                        />\n                        Remember Me\n                    </label>\n                    <Link\n                        href=\"/forgot-password\"\n                        className=\"text-sm text-slate-600 dark:text-slate-500 hover:text-slate-400 dark:hover:text-slate-300 hover:underline transition duration-200\"\n                    >\n                        Forgot Password?\n                    </Link>\n                </div>\n\n                <button\n                    type=\"submit\"\n                    disabled={loading}\n                    className={`w-full bg-white dark:bg-slate-600 border border-gray-300 dark:border-none text-gray-900 dark:text-gray-100 px-5 py-2.5 rounded hover:bg-gray-100 dark:hover:bg-slate-400 transition duration-200 text-base flex items-center justify-center ${\n                        loading ? 'opacity-50 cursor-not-allowed' : ''\n                    }`}\n                >\n                    {loading ? (\n                        <svg\n                            className=\"animate-spin h-5 w-5 mr-2 text-gray-900 dark:text-gray-100\"\n                            xmlns=\"http://www.w3.org/2000/svg\"\n                            fill=\"none\"\n                            viewBox=\"0 0 24 24\"\n                        >\n                            <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\"></circle>\n                            <path\n                                className=\"opacity-75\"\n                                fill=\"currentColor\"\n                                d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"\n                            ></path>\n                        </svg>\n                    ) : null}\n                    Login\n                </button>\n            </form>\n\n            {/* OAuth Buttons */}\n            <div className=\"mt-6 space-y-4\">\n                <button\n                    onClick={() => handleOAuthLogin('google')}\n                    disabled={loading}\n                    className={`w-full bg-white dark:bg-slate-600 border border-gray-300 dark:border-none text-gray-900 dark:text-gray-100 px-5 py-2.5 rounded hover:bg-gray-100 dark:hover:bg-slate-400 transition duration-200 text-base flex items-center justify-center ${\n                        loading ? 'opacity-50 cursor-not-allowed' : ''\n                    }`}\n                >\n                    <svg className=\"h-5 w-5 mr-2\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n                        <path\n                            d=\"M12.48 10.92v3.28h7.84c-.24 1.84-.853 3.187-1.787 4.133-1.147 1.147-2.933 2.4-6.053 2.4-4.827 0-8.6-3.893-8.6-8.72s3.773-8.72 8.6-8.72c2.6 0 4.507 1.027 5.907 2.347l2.307-2.307C18.747 1.44 16.133 0 12.48 0 5.867 0 .307 5.387.307 12s5.56 12 12.173 12c3.573 0 6.267-1.173 8.373-3.36 2.16-2.16 2.84-5.213 2.84-8.667 0-.76-.053-1.467-.173-2.053H12.48z\"\n                            fill=\"currentColor\"\n                        />\n                    </svg>\n                    Login with Google\n                </button>\n                <button\n                    onClick={() => handleOAuthLogin('github')}\n                    disabled={loading}\n                    className={`w-full bg-white dark:bg-slate-600 border border-gray-300 dark:border-none text-gray-900 dark:text-gray-100 px-5 py-2.5 rounded hover:bg-gray-100 dark:hover:bg-slate-400 transition duration-200 text-base flex items-center justify-center ${\n                        loading ? 'opacity-50 cursor-not-allowed' : ''\n                    }`}\n                >\n                    <svg className=\"h-7 w-7 mr-2\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\">\n                        <path d=\"M12 2C6.477 2 2 6.477 2 12c0 4.42 2.865 8.17 6.84 9.5.5.09.68-.22.68-.49 0-.24-.01-.87-.01-1.7-2.78.6-3.37-1.34-3.37-1.34-.46-.58-1.12-.88-1.12-.88-.91-.62.07-.61.07-.61 1 .07 1.53 1.03 1.53 1.03.89 1.53 2.34 1.09 2.91.83.09-.65.35-1.09.63-1.34-2.22-.25-4.55-1.11-4.55-4.94 0-1.09.39-1.98 1.03-2.68-.1-.25-.45-1.27.1-2.65 0 0 .84-.27 2.75 1.02A9.564 9.564 0 0112 6.8c.85.004 1.71.11 2.52.33 1.91-1.29 2.75-1.02 2.75-1.02.55 1.38.2 2.4 .1 2.65.64.7 1.03 1.59 1.03 2.68 0 3.84-2.34 4.68-4.57 4.93.36.31.68.92.68 1.85 0 1.34-.01 2.42-.01 2.75 0 .27.18.58.69.48C19.135 20.17 22 16.42 22 12c0-5.523-4.477-10-10-10z\" />\n                    </svg>\n                    Login with GitHub\n                </button>\n            </div>\n\n            {error && (\n                <p\n                    className={`bg-red-100 dark:bg-red-900 text-red-800 dark:text-red-200 text-sm p-2 rounded-md animate-fadeInShort flex items-center transition-opacity duration-500 ${\n                        isExitingError ? 'opacity-0' : 'opacity-100'\n                    }`}\n                >\n                    <XCircleIcon className=\"h-5 w-5 mr-2 text-red-800 dark:text-red-200\" />\n                    {error}\n                    <button onClick={() => setError('')} className=\"ml-auto\">\n                        <XMarkIcon className=\"h-5 w-5 text-red-800 dark:text-red-200\" />\n                    </button>\n                </p>\n            )}\n            {message && (\n                <p\n                    className={`bg-green-100 dark:bg-green-900 text-green-800 dark:text-green-200 text-sm p-2 rounded-md animate-fadeInShort flex items-center transition-opacity duration-500 ${\n                        isExitingMessage ? 'opacity-0' : 'opacity-100'\n                    }`}\n                >\n                    <CheckCircleIcon className=\"h-5 w-5 mr-2 text-green-800 dark:text-green-200\" />\n                    {message}\n                    <button onClick={() => setMessage('')} className=\"ml-auto\">\n                        <XMarkIcon className=\"h-5 w-5 text-green-800 dark:text-gray-200\" />\n                    </button>\n                </p>\n            )}\n\n            <p className=\"mt-4 text-sm text-gray-900 dark:text-gray-100\">\n                Donâ€™t have an account?{' '}\n                <Link\n                    href=\"/register\"\n                    className=\"text-slate-600 dark:text-slate-500 hover:text-slate-400 dark:hover:text-slate-300 hover:underline transition duration-200\"\n                >\n                    Register\n                </Link>\n            </p>\n        </div>\n\n    );\n}"],"names":[],"mappings":"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"}},
    {"offset": {"line": 897, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}