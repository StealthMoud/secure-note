{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 135, "column": 0}, "map": {"version":3,"sources":["file:///app/src/services/api.ts"],"sourcesContent":["import axios from 'axios';\n\nconst API_URL = process.env.NEXT_PUBLIC_BACKEND_URL;\n\nexport const api = axios.create({\n    baseURL: `${API_URL}/api`,\n    timeout: 5000,\n    headers: {\n        'Content-Type': 'application/json',\n    },\n});\n\nexport default api;\n\n"],"names":[],"mappings":";;;;AAAA;;AAEA,MAAM;AAEC,MAAM,MAAM,qIAAA,CAAA,UAAK,CAAC,MAAM,CAAC;IAC5B,SAAS,GAAG,QAAQ,IAAI,CAAC;IACzB,SAAS;IACT,SAAS;QACL,gBAAgB;IACpB;AACJ;uCAEe"}},
    {"offset": {"line": 150, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 156, "column": 0}, "map": {"version":3,"sources":["file:///app/src/services/auth.ts"],"sourcesContent":["import api from './api';\n\ninterface User {\n    _id: string;\n    username: string;\n    email: string;\n    role: string;\n}\n\ninterface LoginResponse {\n    token: string;\n    user: User;\n}\n\ninterface RegisterResponse {\n    message: string;\n}\n\ninterface UserResponse {\n    user: User;\n    role: string;\n}\n\ninterface VerifyEmailResponse {\n    message: string;\n}\n\n\nexport const registerUser = async (\n    username: string,\n    email: string,\n    password: string,\n    confirmPassword: string\n): Promise<RegisterResponse> => {\n    try {\n        const response = await api.post<RegisterResponse>('/auth/register', {\n            username,\n            email,\n            password,\n            confirmPassword,\n        });\n        return response.data;\n    } catch (error: any) {\n        if (error.response?.data?.errors) {\n            const fieldErrors: Record<string, string> = {};\n            error.response.data.errors.forEach((err: any) => {\n                fieldErrors[err.path || err.param] = err.msg;\n            });\n            throw { fieldErrors };\n        }\n        throw new Error(error.response?.data?.error || 'Registration failed');\n    }\n};\n\n\n\nexport const loginUser = async (identifier: string, password: string): Promise<LoginResponse> => {\n    try {\n        const response = await api.post<LoginResponse>('/auth/login', {identifier, password});\n        return response.data;\n    } catch (error: any) {\n        if (error.response?.data?.errors) {\n            const fieldErrors: Record<string, string> = {};\n            error.response.data.errors.forEach((err: any) => {\n                fieldErrors[err.path || err.param] = err.msg;\n            });\n            throw { fieldErrors };\n        }\n        throw new Error(error.response?.data?.error || 'Login failed');\n    }\n};\n\n// Verify Email\nexport const verifyEmail = async (token: string): Promise<VerifyEmailResponse> => {\n    try {\n        const response = await api.get<VerifyEmailResponse>(`/auth/verify-email?token=${token}`);\n        return response.data; // Typed as VerifyEmailResponse\n    } catch (error: any) {\n        throw new Error(error.response?.data?.error || 'Email verification failed');\n    }\n};\n\n// Get Current User\nexport const getCurrentUser = async (token: string): Promise<UserResponse> => {\n    try {\n        const response = await api.get<UserResponse>('/users/me', {\n            headers: {Authorization: `Bearer ${token}`},\n        });\n        return response.data;\n    } catch (error: any) {\n        throw new Error(error.response?.data?.error || 'Failed to fetch user');\n    }\n};\n\nexport const requestVerification = async (): Promise<{ message: string }> => {\n    try {\n        const token = localStorage.getItem('token');\n        const response = await api.post<{ message: string }>('/auth/request-verification', {}, {\n            headers: {Authorization: `Bearer ${token}`},\n        });\n        return response.data;\n    } catch (error: any) {\n        throw new Error(error.response?.data?.error || 'Failed to request verification');\n    }\n};\n\nexport const approveVerification = async (userId: string): Promise<{ message: string }> => {\n    try {\n        const token = localStorage.getItem('token');\n        const response = await api.post<{ message: string }>('/auth/approve-verification', {userId}, {\n            headers: {Authorization: `Bearer ${token}`},\n        });\n        return response.data;\n    } catch (error: any) {\n        throw new Error(error.response?.data?.error || 'Failed to approve verification');\n    }\n};"],"names":[],"mappings":";;;;;;;;AAAA;;AA4BO,MAAM,eAAe,OACxB,UACA,OACA,UACA;IAEA,IAAI;QACA,MAAM,WAAW,MAAM,sHAAA,CAAA,UAAG,CAAC,IAAI,CAAmB,kBAAkB;YAChE;YACA;YACA;YACA;QACJ;QACA,OAAO,SAAS,IAAI;IACxB,EAAE,OAAO,OAAY;QACjB,IAAI,MAAM,QAAQ,EAAE,MAAM,QAAQ;YAC9B,MAAM,cAAsC,CAAC;YAC7C,MAAM,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;gBAChC,WAAW,CAAC,IAAI,IAAI,IAAI,IAAI,KAAK,CAAC,GAAG,IAAI,GAAG;YAChD;YACA,MAAM;gBAAE;YAAY;QACxB;QACA,MAAM,IAAI,MAAM,MAAM,QAAQ,EAAE,MAAM,SAAS;IACnD;AACJ;AAIO,MAAM,YAAY,OAAO,YAAoB;IAChD,IAAI;QACA,MAAM,WAAW,MAAM,sHAAA,CAAA,UAAG,CAAC,IAAI,CAAgB,eAAe;YAAC;YAAY;QAAQ;QACnF,OAAO,SAAS,IAAI;IACxB,EAAE,OAAO,OAAY;QACjB,IAAI,MAAM,QAAQ,EAAE,MAAM,QAAQ;YAC9B,MAAM,cAAsC,CAAC;YAC7C,MAAM,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;gBAChC,WAAW,CAAC,IAAI,IAAI,IAAI,IAAI,KAAK,CAAC,GAAG,IAAI,GAAG;YAChD;YACA,MAAM;gBAAE;YAAY;QACxB;QACA,MAAM,IAAI,MAAM,MAAM,QAAQ,EAAE,MAAM,SAAS;IACnD;AACJ;AAGO,MAAM,cAAc,OAAO;IAC9B,IAAI;QACA,MAAM,WAAW,MAAM,sHAAA,CAAA,UAAG,CAAC,GAAG,CAAsB,CAAC,yBAAyB,EAAE,OAAO;QACvF,OAAO,SAAS,IAAI,EAAE,+BAA+B;IACzD,EAAE,OAAO,OAAY;QACjB,MAAM,IAAI,MAAM,MAAM,QAAQ,EAAE,MAAM,SAAS;IACnD;AACJ;AAGO,MAAM,iBAAiB,OAAO;IACjC,IAAI;QACA,MAAM,WAAW,MAAM,sHAAA,CAAA,UAAG,CAAC,GAAG,CAAe,aAAa;YACtD,SAAS;gBAAC,eAAe,CAAC,OAAO,EAAE,OAAO;YAAA;QAC9C;QACA,OAAO,SAAS,IAAI;IACxB,EAAE,OAAO,OAAY;QACjB,MAAM,IAAI,MAAM,MAAM,QAAQ,EAAE,MAAM,SAAS;IACnD;AACJ;AAEO,MAAM,sBAAsB;IAC/B,IAAI;QACA,MAAM,QAAQ,aAAa,OAAO,CAAC;QACnC,MAAM,WAAW,MAAM,sHAAA,CAAA,UAAG,CAAC,IAAI,CAAsB,8BAA8B,CAAC,GAAG;YACnF,SAAS;gBAAC,eAAe,CAAC,OAAO,EAAE,OAAO;YAAA;QAC9C;QACA,OAAO,SAAS,IAAI;IACxB,EAAE,OAAO,OAAY;QACjB,MAAM,IAAI,MAAM,MAAM,QAAQ,EAAE,MAAM,SAAS;IACnD;AACJ;AAEO,MAAM,sBAAsB,OAAO;IACtC,IAAI;QACA,MAAM,QAAQ,aAAa,OAAO,CAAC;QACnC,MAAM,WAAW,MAAM,sHAAA,CAAA,UAAG,CAAC,IAAI,CAAsB,8BAA8B;YAAC;QAAM,GAAG;YACzF,SAAS;gBAAC,eAAe,CAAC,OAAO,EAAE,OAAO;YAAA;QAC9C;QACA,OAAO,SAAS,IAAI;IACxB,EAAE,OAAO,OAAY;QACjB,MAAM,IAAI,MAAM,MAAM,QAAQ,EAAE,MAAM,SAAS;IACnD;AACJ"}},
    {"offset": {"line": 256, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 262, "column": 0}, "map": {"version":3,"sources":["file:///app/src/components/ProtectedRoute.tsx"],"sourcesContent":["'use client';\nimport React, { useEffect, useState } from 'react';\nimport { useRouter } from 'next/navigation'; // Updated for App Router\nimport { getCurrentUser } from '@/services/auth'; // Updated import\n\ninterface Props {\n    children: React.ReactNode;\n}\n\nexport default function ProtectedRoute({ children }: Props) {\n    const router = useRouter();\n    const [loading, setLoading] = useState(true);\n\n    useEffect(() => {\n        const checkAuth = async () => {\n            const token = localStorage.getItem('token');\n            if (!token) {\n                router.push('/login');\n                return;\n            }\n            try {\n                await getCurrentUser(token); // Verify token\n                setLoading(false);\n            } catch (error) {\n                localStorage.removeItem('token');\n                router.push('/login');\n            }\n        };\n        checkAuth();\n    }, [router]);\n\n    if (loading) return <div className=\"text-center mt-10\">Loading...</div>;\n\n    return <>{children}</>;\n}"],"names":[],"mappings":";;;;AACA;AACA,mOAA6C,yBAAyB;AACtE,6MAAkD,iBAAiB;AAHnE;;;;;AASe,SAAS,eAAe,EAAE,QAAQ,EAAS;IACtD,MAAM,SAAS,CAAA,GAAA,kIAAA,CAAA,YAAS,AAAD;IACvB,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAEvC,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACN,MAAM,YAAY;YACd,MAAM,QAAQ,aAAa,OAAO,CAAC;YACnC,IAAI,CAAC,OAAO;gBACR,OAAO,IAAI,CAAC;gBACZ;YACJ;YACA,IAAI;gBACA,MAAM,CAAA,GAAA,uHAAA,CAAA,iBAAc,AAAD,EAAE,QAAQ,eAAe;gBAC5C,WAAW;YACf,EAAE,OAAO,OAAO;gBACZ,aAAa,UAAU,CAAC;gBACxB,OAAO,IAAI,CAAC;YAChB;QACJ;QACA;IACJ,GAAG;QAAC;KAAO;IAEX,IAAI,SAAS,qBAAO,8OAAC;QAAI,WAAU;kBAAoB;;;;;;IAEvD,qBAAO;kBAAG;;AACd"}},
    {"offset": {"line": 308, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 314, "column": 0}, "map": {"version":3,"sources":["file:///app/src/services/notes.ts"],"sourcesContent":["import api from './api';\n\ninterface Note {\n    _id: string;\n    title: string;\n    content: string;\n    format: 'plain' | 'markdown';\n    encrypted: boolean;\n    owner: string | { _id: string; username: string }; // Union for flexibility\n    createdAt: string;\n    sharedWith: { user: { _id: string; username: string }; permission: 'viewer' | 'editor'; encryptedContent?: string }[];\n}\n\ninterface NotesResponse {\n    message: string;\n    notes: Note[];\n}\n\nexport const createNote = async (title: string, content: string, encrypted: boolean = false): Promise<{ message: string; note: Note }> => {\n    try {\n        const token = localStorage.getItem('token');\n        const response = await api.post<{ message: string; note: Note }>('/notes', { title, content, encrypted }, {\n            headers: { Authorization: `Bearer ${token}` },\n        });\n        return response.data;\n    } catch (error: any) {\n        throw new Error(error.response?.data?.error || 'Failed to create note');\n    }\n};\n\nexport const getNotes = async (): Promise<Note[]> => {\n    try {\n        const token = localStorage.getItem('token');\n        const response = await api.get<NotesResponse>('/notes', {\n            headers: { Authorization: `Bearer ${token}` },\n        });\n        return response.data.notes;\n    } catch (error: any) {\n        throw new Error(error.response?.data?.error || 'Failed to fetch notes');\n    }\n};\n\nexport const updateNote = async (noteId: string, title: string, content: string, encrypted: boolean = false): Promise<{ message: string; note: Note }> => {\n    try {\n        const token = localStorage.getItem('token');\n        const response = await api.put<{ message: string; note: Note }>(`/notes/${noteId}`, { title, content, encrypted }, {\n            headers: { Authorization: `Bearer ${token}` },\n        });\n        return response.data;\n    } catch (error: any) {\n        throw new Error(error.response?.data?.error || 'Failed to update note');\n    }\n};\n\nexport const deleteNote = async (noteId: string): Promise<{ message: string }> => {\n    try {\n        const token = localStorage.getItem('token');\n        const response = await api.delete<{ message: string }>(`/notes/${noteId}`, {\n            headers: { Authorization: `Bearer ${token}` },\n        });\n        return response.data;\n    } catch (error: any) {\n        throw new Error(error.response?.data?.error || 'Failed to delete note');\n    }\n};\n\nexport const shareNote = async (noteId: string, userId: string, permission: 'viewer' | 'editor'): Promise<{ message: string; note: Note }> => {\n    try {\n        const token = localStorage.getItem('token');\n        const response = await api.post<{ message: string; note: Note }>(`/notes/${noteId}/share`, { userId, permission }, {\n            headers: { Authorization: `Bearer ${token}` },\n        });\n        return response.data;\n    } catch (error: any) {\n        throw new Error(error.response?.data?.error || 'Failed to share note');\n    }\n};"],"names":[],"mappings":";;;;;;;AAAA;;AAkBO,MAAM,aAAa,OAAO,OAAe,SAAiB,YAAqB,KAAK;IACvF,IAAI;QACA,MAAM,QAAQ,aAAa,OAAO,CAAC;QACnC,MAAM,WAAW,MAAM,sHAAA,CAAA,UAAG,CAAC,IAAI,CAAkC,UAAU;YAAE;YAAO;YAAS;QAAU,GAAG;YACtG,SAAS;gBAAE,eAAe,CAAC,OAAO,EAAE,OAAO;YAAC;QAChD;QACA,OAAO,SAAS,IAAI;IACxB,EAAE,OAAO,OAAY;QACjB,MAAM,IAAI,MAAM,MAAM,QAAQ,EAAE,MAAM,SAAS;IACnD;AACJ;AAEO,MAAM,WAAW;IACpB,IAAI;QACA,MAAM,QAAQ,aAAa,OAAO,CAAC;QACnC,MAAM,WAAW,MAAM,sHAAA,CAAA,UAAG,CAAC,GAAG,CAAgB,UAAU;YACpD,SAAS;gBAAE,eAAe,CAAC,OAAO,EAAE,OAAO;YAAC;QAChD;QACA,OAAO,SAAS,IAAI,CAAC,KAAK;IAC9B,EAAE,OAAO,OAAY;QACjB,MAAM,IAAI,MAAM,MAAM,QAAQ,EAAE,MAAM,SAAS;IACnD;AACJ;AAEO,MAAM,aAAa,OAAO,QAAgB,OAAe,SAAiB,YAAqB,KAAK;IACvG,IAAI;QACA,MAAM,QAAQ,aAAa,OAAO,CAAC;QACnC,MAAM,WAAW,MAAM,sHAAA,CAAA,UAAG,CAAC,GAAG,CAAkC,CAAC,OAAO,EAAE,QAAQ,EAAE;YAAE;YAAO;YAAS;QAAU,GAAG;YAC/G,SAAS;gBAAE,eAAe,CAAC,OAAO,EAAE,OAAO;YAAC;QAChD;QACA,OAAO,SAAS,IAAI;IACxB,EAAE,OAAO,OAAY;QACjB,MAAM,IAAI,MAAM,MAAM,QAAQ,EAAE,MAAM,SAAS;IACnD;AACJ;AAEO,MAAM,aAAa,OAAO;IAC7B,IAAI;QACA,MAAM,QAAQ,aAAa,OAAO,CAAC;QACnC,MAAM,WAAW,MAAM,sHAAA,CAAA,UAAG,CAAC,MAAM,CAAsB,CAAC,OAAO,EAAE,QAAQ,EAAE;YACvE,SAAS;gBAAE,eAAe,CAAC,OAAO,EAAE,OAAO;YAAC;QAChD;QACA,OAAO,SAAS,IAAI;IACxB,EAAE,OAAO,OAAY;QACjB,MAAM,IAAI,MAAM,MAAM,QAAQ,EAAE,MAAM,SAAS;IACnD;AACJ;AAEO,MAAM,YAAY,OAAO,QAAgB,QAAgB;IAC5D,IAAI;QACA,MAAM,QAAQ,aAAa,OAAO,CAAC;QACnC,MAAM,WAAW,MAAM,sHAAA,CAAA,UAAG,CAAC,IAAI,CAAkC,CAAC,OAAO,EAAE,OAAO,MAAM,CAAC,EAAE;YAAE;YAAQ;QAAW,GAAG;YAC/G,SAAS;gBAAE,eAAe,CAAC,OAAO,EAAE,OAAO;YAAC;QAChD;QACA,OAAO,SAAS,IAAI;IACxB,EAAE,OAAO,OAAY;QACjB,MAAM,IAAI,MAAM,MAAM,QAAQ,EAAE,MAAM,SAAS;IACnD;AACJ"}},
    {"offset": {"line": 399, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 405, "column": 0}, "map": {"version":3,"sources":["file:///app/src/services/users.ts"],"sourcesContent":["import api from '@/services/api';\n\nconst getToken = () => localStorage.getItem('token') || '';\n\ninterface MessageResponse {\n    message: string;\n}\n\ninterface Friend {\n    _id: string;\n    username: string;\n}\n\ninterface FriendRequest {\n    _id: string;\n    sender: { _id: string; username: string };\n    receiver: { _id: string; username: string };\n    status: 'pending' | 'accepted' | 'rejected';\n    createdAt: string;\n    updatedAt: string;\n}\n\ninterface FriendsResponse {\n    friends: Friend[];\n    friendRequests: FriendRequest[];\n}\n\nexport const sendFriendRequest = async (username: string): Promise<MessageResponse> => {\n    const token = getToken();\n    try {\n        const response = await api.post<MessageResponse>('/users/friend/request', { username }, {\n            headers: { Authorization: `Bearer ${token}` },\n        });\n        return response.data;\n    } catch (error: any) {\n        // Throw the error response data if it exists\n        if (error.response && error.response.data && error.response.data.error) {\n            throw new Error(error.response.data.error);\n        }\n        throw error; // Fallback to generic error if no specific message\n    }\n};\n\nexport const respondToFriendRequest = async (\n    username: string,\n    action: 'accept' | 'reject'\n): Promise<MessageResponse> => {\n    const token = getToken();\n    try {\n        const response = await api.post<MessageResponse>('/users/friend/respond', { username, action }, {\n            headers: { Authorization: `Bearer ${token}` },\n        });\n        return response.data;\n    } catch (error: any) {\n        if (error.response && error.response.data && error.response.data.error) {\n            throw new Error(error.response.data.error);\n        }\n        throw error;\n    }\n};\n\nexport const getFriends = async (): Promise<FriendsResponse> => {\n    const token = getToken();\n    try {\n        const response = await api.get<FriendsResponse>('/users/friends', {\n            headers: { Authorization: `Bearer ${token}` },\n        });\n        return response.data;\n    } catch (error: any) {\n        if (error.response && error.response.data && error.response.data.error) {\n            throw new Error(error.response.data.error);\n        }\n        throw error;\n    }\n};"],"names":[],"mappings":";;;;;AAAA;;AAEA,MAAM,WAAW,IAAM,aAAa,OAAO,CAAC,YAAY;AAyBjD,MAAM,oBAAoB,OAAO;IACpC,MAAM,QAAQ;IACd,IAAI;QACA,MAAM,WAAW,MAAM,sHAAA,CAAA,UAAG,CAAC,IAAI,CAAkB,yBAAyB;YAAE;QAAS,GAAG;YACpF,SAAS;gBAAE,eAAe,CAAC,OAAO,EAAE,OAAO;YAAC;QAChD;QACA,OAAO,SAAS,IAAI;IACxB,EAAE,OAAO,OAAY;QACjB,6CAA6C;QAC7C,IAAI,MAAM,QAAQ,IAAI,MAAM,QAAQ,CAAC,IAAI,IAAI,MAAM,QAAQ,CAAC,IAAI,CAAC,KAAK,EAAE;YACpE,MAAM,IAAI,MAAM,MAAM,QAAQ,CAAC,IAAI,CAAC,KAAK;QAC7C;QACA,MAAM,OAAO,mDAAmD;IACpE;AACJ;AAEO,MAAM,yBAAyB,OAClC,UACA;IAEA,MAAM,QAAQ;IACd,IAAI;QACA,MAAM,WAAW,MAAM,sHAAA,CAAA,UAAG,CAAC,IAAI,CAAkB,yBAAyB;YAAE;YAAU;QAAO,GAAG;YAC5F,SAAS;gBAAE,eAAe,CAAC,OAAO,EAAE,OAAO;YAAC;QAChD;QACA,OAAO,SAAS,IAAI;IACxB,EAAE,OAAO,OAAY;QACjB,IAAI,MAAM,QAAQ,IAAI,MAAM,QAAQ,CAAC,IAAI,IAAI,MAAM,QAAQ,CAAC,IAAI,CAAC,KAAK,EAAE;YACpE,MAAM,IAAI,MAAM,MAAM,QAAQ,CAAC,IAAI,CAAC,KAAK;QAC7C;QACA,MAAM;IACV;AACJ;AAEO,MAAM,aAAa;IACtB,MAAM,QAAQ;IACd,IAAI;QACA,MAAM,WAAW,MAAM,sHAAA,CAAA,UAAG,CAAC,GAAG,CAAkB,kBAAkB;YAC9D,SAAS;gBAAE,eAAe,CAAC,OAAO,EAAE,OAAO;YAAC;QAChD;QACA,OAAO,SAAS,IAAI;IACxB,EAAE,OAAO,OAAY;QACjB,IAAI,MAAM,QAAQ,IAAI,MAAM,QAAQ,CAAC,IAAI,IAAI,MAAM,QAAQ,CAAC,IAAI,CAAC,KAAK,EAAE;YACpE,MAAM,IAAI,MAAM,MAAM,QAAQ,CAAC,IAAI,CAAC,KAAK;QAC7C;QACA,MAAM;IACV;AACJ"}},
    {"offset": {"line": 467, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 473, "column": 0}, "map": {"version":3,"sources":["file:///app/app/dashboard/dashboardLogic.ts"],"sourcesContent":["'use client';\nimport { useState, useEffect } from 'react';\nimport { getCurrentUser, requestVerification } from '@/services/auth';\nimport { createNote, getNotes, updateNote, deleteNote, shareNote } from '@/services/notes';\nimport { getFriends, sendFriendRequest, respondToFriendRequest } from '@/services/users';\n\ninterface UserData {\n    user: { _id: string; username: string; email: string; role: string; verified?: boolean };\n    role: string;\n}\n\ninterface Note {\n    _id: string;\n    title: string;\n    content: string;\n    format: 'plain' | 'markdown';\n    encrypted: boolean;\n    owner: string | { _id: string; username: string };\n    createdAt: string;\n    sharedWith: { user: { _id: string; username: string }; permission: 'viewer' | 'editor'; encryptedContent?: string }[];\n}\n\ninterface Friend {\n    _id: string;\n    username: string;\n}\n\ninterface FriendRequest {\n    _id: string;\n    sender: { _id: string; username: string };\n    receiver: { _id: string; username: string };\n    status: 'pending' | 'accepted' | 'rejected';\n    createdAt: string;\n    updatedAt: string;\n}\n\nexport const useDashboardLogic = () => {\n    const [user, setUser] = useState<UserData | null>(null);\n    const [notes, setNotes] = useState<Note[]>([]);\n    const [newTitle, setNewTitle] = useState('');\n    const [newContent, setNewContent] = useState('');\n    const [editingNoteId, setEditingNoteId] = useState<string | null>(null);\n    const [shareUserId, setShareUserId] = useState('');\n    const [sharePermission, setSharePermission] = useState<'viewer' | 'editor'>('viewer');\n    const [friends, setFriends] = useState<Friend[]>([]);\n    const [friendRequests, setFriendRequests] = useState<FriendRequest[]>([]);\n    const [friendRequestUsername, setFriendRequestUsername] = useState('');\n    const [loading, setLoading] = useState(true);\n    const [message, setMessage] = useState<string>('');\n    const [error, setError] = useState<string>('');\n\n    useEffect(() => {\n        const fetchData = async () => {\n            const token = localStorage.getItem('token');\n            if (token) {\n                try {\n                    const data = await getCurrentUser(token);\n                    setUser(data);\n                    if (data.role === 'admin') {\n                        window.location.href = '/admin/verify';\n                        return;\n                    }\n                    const notesData = await getNotes();\n                    setNotes(notesData);\n                    const friendsData = await getFriends();\n                    setFriends(friendsData.friends);\n                    setFriendRequests(friendsData.friendRequests);\n                } catch (error: any) {\n                    console.error('Failed to fetch data:', error);\n                    setError(error.message || 'Failed to load data');\n                    localStorage.removeItem('token');\n                    window.location.href = '/login';\n                }\n            }\n            setLoading(false);\n        };\n        fetchData();\n    }, []);\n\n    const handleLogout = () => {\n        localStorage.removeItem('token');\n        window.location.href = '/login';\n    };\n\n    const handleRequestVerification = async () => {\n        try {\n            const data = await requestVerification();\n            setMessage(data.message);\n        } catch (err: any) {\n            setError(err.message || 'Failed to request verification');\n        }\n    };\n\n    const handleCreateNote = async () => {\n        if (!newTitle.trim()) {\n            setError('Title is required');\n            return;\n        }\n        try {\n            const data = await createNote(newTitle, newContent);\n            setNotes([data.note, ...notes]);\n            setNewTitle('');\n            setNewContent('');\n            setMessage(data.message);\n            setError('');\n        } catch (err: any) {\n            setError(err.message || 'Failed to create note');\n        }\n    };\n\n    const handleEditNote = (note: Note) => {\n        setEditingNoteId(note._id);\n        setNewTitle(note.title);\n        setNewContent(note.content);\n    };\n\n    const handleUpdateNote = async () => {\n        if (!newTitle.trim()) {\n            setError('Title is required');\n            return;\n        }\n        if (!editingNoteId) return;\n        try {\n            const data = await updateNote(editingNoteId, newTitle, newContent);\n            setNotes(notes.map((n) => (n._id === editingNoteId ? data.note : n)));\n            setEditingNoteId(null);\n            setNewTitle('');\n            setNewContent('');\n            setMessage(data.message);\n            setError('');\n        } catch (err: any) {\n            setError(err.message || 'Failed to update note');\n        }\n    };\n\n    const handleDeleteNote = async (noteId: string) => {\n        try {\n            const data = await deleteNote(noteId);\n            setNotes(notes.filter((n) => n._id !== noteId));\n            setMessage(data.message);\n            setError('');\n        } catch (err: any) {\n            setError(err.message || 'Failed to delete note');\n        }\n    };\n\n    const handleShareNote = async (noteId: string) => {\n        if (!shareUserId.trim()) {\n            setError('User ID is required to share');\n            return;\n        }\n        try {\n            const data = await shareNote(noteId, shareUserId, sharePermission);\n            setNotes(notes.map((n) => (n._id === noteId ? data.note : n)));\n            setShareUserId('');\n            setSharePermission('viewer');\n            setMessage(data.message);\n            setError('');\n        } catch (err: any) {\n            setError(err.message || 'Failed to share note');\n        }\n    };\n\n    const handleSendFriendRequest = async () => {\n        if (!friendRequestUsername.trim()) {\n            setError('Username is required to send a friend request');\n            return;\n        }\n        try {\n            const data = await sendFriendRequest(friendRequestUsername);\n            setFriendRequestUsername('');\n            setMessage(data.message);\n            setError('');\n            const friendsData = await getFriends();\n            setFriends(friendsData.friends);\n            setFriendRequests(friendsData.friendRequests);\n        } catch (err: any) {\n            setError(err.message || 'Failed to send friend request');\n        }\n    };\n\n    const handleRespondToFriendRequest = async (requestId: string, action: 'accept' | 'reject') => {\n        try {\n            const data = await respondToFriendRequest(requestId, action);\n            setMessage(data.message);\n            setError('');\n            const friendsData = await getFriends();\n            setFriends(friendsData.friends);\n            setFriendRequests(friendsData.friendRequests);\n        } catch (err: any) {\n            // Extract backend error message if available, otherwise fallback to generic message\n            const errorMessage = err.response?.data?.error || err.message || 'Failed to respond to friend request';\n            setError(errorMessage);\n        }\n    };\n\n\n    const isOwner = (note: Note, userId: string): boolean => {\n        return typeof note.owner === 'string' ? note.owner === userId : note.owner._id === userId;\n    };\n\n    return {\n        user,\n        notes,\n        newTitle,\n        setNewTitle,\n        newContent,\n        setNewContent,\n        editingNoteId,\n        shareUserId,\n        setShareUserId,\n        sharePermission,\n        setSharePermission,\n        friends,\n        friendRequests,\n        friendRequestUsername,\n        setFriendRequestUsername,\n        loading,\n        message,\n        error,\n        handleLogout,\n        handleRequestVerification,\n        handleCreateNote,\n        handleEditNote,\n        handleUpdateNote,\n        handleDeleteNote,\n        handleShareNote,\n        handleSendFriendRequest,\n        handleRespondToFriendRequest,\n        isOwner,\n    };\n};"],"names":[],"mappings":"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"}},
    {"offset": {"line": 671, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 677, "column": 0}, "map": {"version":3,"sources":["file:///app/app/dashboard/page.tsx"],"sourcesContent":["'use client';\nimport ProtectedRoute from '@/components/ProtectedRoute';\nimport { useDashboardLogic } from './dashboardLogic';\n\nexport default function DashboardPage() {\n    const {\n        user,\n        notes,\n        newTitle,\n        setNewTitle,\n        newContent,\n        setNewContent,\n        editingNoteId,\n        shareUserId,\n        setShareUserId,\n        sharePermission,\n        setSharePermission,\n        friends,\n        friendRequests,\n        friendRequestUsername,\n        setFriendRequestUsername,\n        loading,\n        message,\n        error,\n        handleLogout,\n        handleRequestVerification,\n        handleCreateNote,\n        handleEditNote,\n        handleUpdateNote,\n        handleDeleteNote,\n        handleShareNote,\n        handleSendFriendRequest,\n        handleRespondToFriendRequest,\n        isOwner,\n    } = useDashboardLogic();\n\n    if (loading) return <div className=\"text-center mt-10\">Loading...</div>;\n\n    console.log('Friends:', friends);\n    console.log('Friend Requests:', friendRequests);\n    console.log('Notes:', notes);\n\n    return (\n        <ProtectedRoute>\n            <div className=\"container mx-auto p-4 max-w-4xl\">\n                <div className=\"flex justify-between items-center mb-4\">\n                    <h1 className=\"text-2xl font-bold\">Dashboard</h1>\n                    <button onClick={handleLogout} className=\"bg-red-500 text-white px-4 py-2 rounded hover:bg-red-600\">\n                        Logout\n                    </button>\n                </div>\n                {user ? (\n                    <>\n                        <p className=\"mb-4\">Welcome, {user.user.username}!</p>\n                        <div className=\"border p-4 rounded mb-4\">\n                            <h2 className=\"text-xl font-semibold mb-2\">Friends</h2>\n                            {user.user.verified ? (\n                                <>\n                                    <div className=\"mb-4\">\n                                        <input\n                                            value={friendRequestUsername}\n                                            onChange={(e) => setFriendRequestUsername(e.target.value)}\n                                            placeholder=\"Enter username to send friend request\"\n                                            className=\"p-2 border rounded mr-2\"\n                                        />\n                                        <button\n                                            onClick={handleSendFriendRequest}\n                                            className=\"bg-blue-500 text-white px-4 py-2 rounded hover:bg-blue-600\"\n                                        >\n                                            Send Friend Request\n                                        </button>\n                                    </div>\n                                    <div className=\"mb-6\">\n                                        <h3 className=\"text-lg font-medium mb-2\">Your Friends</h3>\n                                        {friends.length > 0 ? (\n                                            <ul className=\"space-y-1\">\n                                                {friends.map((friend, index) => (\n                                                    <li\n                                                        key={friend._id || `friend-${index}`}\n                                                        className=\"p-2 bg-gray-100 rounded\"\n                                                    >\n                                                        {friend.username}\n                                                    </li>\n                                                ))}\n                                            </ul>\n                                        ) : (\n                                            <p className=\"text-gray-500\">No friends yet.</p>\n                                        )}\n                                    </div>\n                                    <div>\n                                        <h3 className=\"text-lg font-medium mb-2\">Friend Request Logs</h3>\n                                        {friendRequests.length > 0 ? (\n                                            <div className=\"space-y-4\">\n                                                <div>\n                                                    <h4 className=\"text-md font-semibold text-gray-700\">Incoming Requests</h4>\n                                                    {friendRequests.filter(r => r.receiver._id === user.user._id).length > 0 ? (\n                                                        <ul className=\"space-y-2\">\n                                                            {friendRequests\n                                                                .filter(r => r.receiver._id === user.user._id)\n                                                                .map((request, index) => {\n                                                                    console.log(`Request ID for ${request.sender.username}:`, request._id);\n                                                                    return (\n                                                                        <li\n                                                                            key={request._id || `incoming-${index}`}\n                                                                            className=\"p-2 border rounded flex justify-between items-center\"\n                                                                        >\n                                                                            <span>\n                                                                                {request.status === 'pending' &&\n                                                                                    `${request.sender.username} sent you a friend request on ${new Date(request.createdAt).toLocaleString()} - Awaiting your response`}\n                                                                                {request.status === 'accepted' &&\n                                                                                    `${request.sender.username}'s friend request was accepted on ${new Date(request.updatedAt).toLocaleString()}`}\n                                                                                {request.status === 'rejected' &&\n                                                                                    `${request.sender.username}'s friend request was rejected on ${new Date(request.updatedAt).toLocaleString()}`}\n                                                                            </span>\n                                                                            {request.status === 'pending' && (\n                                                                                <div className=\"space-x-2\">\n                                                                                    <button\n                                                                                        onClick={() => handleRespondToFriendRequest(request._id, 'accept')}\n                                                                                        className=\"bg-green-500 text-white px-2 py-1 rounded hover:bg-green-600\"\n                                                                                    >\n                                                                                        Accept\n                                                                                    </button>\n                                                                                    <button\n                                                                                        onClick={() => handleRespondToFriendRequest(request._id, 'reject')}\n                                                                                        className=\"bg-red-500 text-white px-2 py-1 rounded hover:bg-red-600\"\n                                                                                    >\n                                                                                        Reject\n                                                                                    </button>\n                                                                                </div>\n                                                                            )}\n                                                                        </li>\n                                                                    );\n                                                                })}\n                                                        </ul>\n                                                    ) : (\n                                                        <p className=\"text-gray-500\">No incoming requests.</p>\n                                                    )}\n                                                </div>\n                                                <div>\n                                                    <h4 className=\"text-md font-semibold text-gray-700\">Outgoing Requests</h4>\n                                                    {friendRequests.filter(r => r.sender._id === user.user._id).length > 0 ? (\n                                                        <ul className=\"space-y-2\">\n                                                            {friendRequests\n                                                                .filter(r => r.sender._id === user.user._id)\n                                                                .map((request, index) => (\n                                                                    <li\n                                                                        key={request._id || `outgoing-${index}`}\n                                                                        className=\"p-2 border rounded\"\n                                                                    >\n                                                                        {request.status === 'pending' &&\n                                                                            `You sent a friend request to ${request.receiver.username} on ${new Date(request.createdAt).toLocaleString()} - Awaiting their response`}\n                                                                        {request.status === 'accepted' &&\n                                                                            `Your friend request to ${request.receiver.username} was accepted on ${new Date(request.updatedAt).toLocaleString()}`}\n                                                                        {request.status === 'rejected' &&\n                                                                            `${request.receiver.username} rejected your friend request on ${new Date(request.updatedAt).toLocaleString()}`}\n                                                                    </li>\n                                                                ))}\n                                                        </ul>\n                                                    ) : (\n                                                        <p className=\"text-gray-500\">No outgoing requests.</p>\n                                                    )}\n                                                </div>\n                                            </div>\n                                        ) : (\n                                            <p className=\"text-gray-500\">No friend request activity.</p>\n                                        )}\n                                    </div>\n                                </>\n                            ) : (\n                                <p className=\"text-yellow-600 mb-2\">Verify your email to send or receive friend requests.</p>\n                            )}\n                        </div>\n                        {user.user.verified ? (\n                            <div className=\"border p-4 rounded\">\n                                <h2 className=\"text-xl font-semibold mb-2\">Your Notes</h2>\n                                <input\n                                    value={newTitle}\n                                    onChange={(e) => setNewTitle(e.target.value)}\n                                    placeholder=\"Note title\"\n                                    className=\"w-full p-2 border rounded mb-2\"\n                                />\n                                <textarea\n                                    value={newContent}\n                                    onChange={(e) => setNewContent(e.target.value)}\n                                    placeholder=\"Write a new note...\"\n                                    className=\"w-full p-2 border rounded mb-2\"\n                                />\n                                <button\n                                    onClick={editingNoteId ? handleUpdateNote : handleCreateNote}\n                                    className=\"bg-blue-500 text-white px-4 py-2 rounded hover:bg-blue-600\"\n                                >\n                                    {editingNoteId ? 'Update Note' : 'Add Note'}\n                                </button>\n                                {message && <p className=\"text-green-500 text-sm mt-2\">{message}</p>}\n                                {error && <p className=\"text-red-500 text-sm mt-2\">{error}</p>}\n                                {notes.length > 0 ? (\n                                    <ul className=\"mt-4 space-y-4\">\n                                        {notes.map((note, index) => (\n                                            <li key={note._id || `note-${index}`} className=\"border p-2 rounded\">\n                                                <div className=\"flex justify-between items-center\">\n                                                    <div>\n                                                        <strong>{note.title}</strong>: {note.content}\n                                                        <span className=\"text-gray-500 text-sm\">\n                                                            {' '}\n                                                            ({new Date(note.createdAt).toLocaleString()})\n                                                        </span>\n                                                        {typeof note.owner !== 'string' && note.owner._id !== user.user._id && (\n                                                            <p className=\"text-gray-600 text-sm\">Shared by {note.owner.username}</p>\n                                                        )}\n                                                    </div>\n                                                    {isOwner(note, user.user._id) && (\n                                                        <div className=\"space-x-2\">\n                                                            <button\n                                                                onClick={() => handleEditNote(note)}\n                                                                className=\"bg-yellow-500 text-white px-2 py-1 rounded hover:bg-yellow-600\"\n                                                            >\n                                                                Edit\n                                                            </button>\n                                                            <button\n                                                                onClick={() => handleDeleteNote(note._id)}\n                                                                className=\"bg-red-500 text-white px-2 py-1 rounded hover:bg-red-600\"\n                                                            >\n                                                                Delete\n                                                            </button>\n                                                        </div>\n                                                    )}\n                                                </div>\n                                                {isOwner(note, user.user._id) && (\n                                                    <div className=\"mt-2\">\n                                                        <input\n                                                            value={shareUserId}\n                                                            onChange={(e) => setShareUserId(e.target.value)}\n                                                            placeholder=\"User ID to share with\"\n                                                            className=\"p-1 border rounded mr-2\"\n                                                        />\n                                                        <select\n                                                            value={sharePermission}\n                                                            onChange={(e) => setSharePermission(e.target.value as 'viewer' | 'editor')}\n                                                            className=\"p-1 border rounded mr-2\"\n                                                        >\n                                                            <option value=\"viewer\">Viewer</option>\n                                                            <option value=\"editor\">Editor</option>\n                                                        </select>\n                                                        <button\n                                                            onClick={() => handleShareNote(note._id)}\n                                                            className=\"bg-green-500 text-white px-2 py-1 rounded hover:bg-green-600\"\n                                                        >\n                                                            Share\n                                                        </button>\n                                                    </div>\n                                                )}\n                                                {note.sharedWith.length > 0 && (\n                                                    <div className=\"mt-2 text-sm text-gray-600\">\n                                                        Shared with:{' '}\n                                                        {note.sharedWith\n                                                            .map((entry) => `${entry.user.username} (${entry.permission})`)\n                                                            .join(', ')}\n                                                    </div>\n                                                )}\n                                            </li>\n                                        ))}\n                                    </ul>\n                                ) : (\n                                    <p className=\"text-gray-500 mt-2\">No notes yet.</p>\n                                )}\n                            </div>\n                        ) : (\n                            <div className=\"border p-4 rounded bg-yellow-100\">\n                                <p className=\"mb-2 text-yellow-800\">Your email is not verified. Limited access (1 note max).</p>\n                                <button\n                                    onClick={handleRequestVerification}\n                                    className=\"bg-blue-500 text-white px-4 py-2 rounded hover:bg-blue-600\"\n                                >\n                                    Request Verification\n                                </button>\n                                {error && <p className=\"text-red-500 text-sm mt-2\">{error}</p>}\n                                {message && <p className=\"text-green-500 text-sm mt-2\">{message}</p>}\n                                {notes.length === 0 && (\n                                    <div className=\"mt-4\">\n                                        <h2 className=\"text-xl font-semibold mb-2\">Create Your Note</h2>\n                                        <input\n                                            value={newTitle}\n                                            onChange={(e) => setNewTitle(e.target.value)}\n                                            placeholder=\"Note title\"\n                                            className=\"w-full p-2 border rounded mb-2\"\n                                        />\n                                        <textarea\n                                            value={newContent}\n                                            onChange={(e) => setNewContent(e.target.value)}\n                                            placeholder=\"Write your note (1 note max)...\"\n                                            className=\"w-full p-2 border rounded mb-2\"\n                                        />\n                                        <button\n                                            onClick={handleCreateNote}\n                                            className=\"bg-blue-500 text-white px-4 py-2 rounded hover:bg-blue-600\"\n                                        >\n                                            Add Note\n                                        </button>\n                                    </div>\n                                )}\n                                {notes.length > 0 ? (\n                                    <ul className=\"mt-4 space-y-2\">\n                                        {notes.map((note, index) => (\n                                            <li key={note._id || `unverified-note-${index}`} className=\"border p-2 rounded\">\n                                                <strong>{note.title}</strong>: {note.content}\n                                                <span className=\"text-gray-500 text-sm\">\n                                                    {' '}\n                                                    ({new Date(note.createdAt).toLocaleString()})\n                                                </span>\n                                                {typeof note.owner !== 'string' && note.owner._id !== user.user._id && (\n                                                    <p className=\"text-gray-600 text-sm\">Shared by {note.owner.username}</p>\n                                                )}\n                                            </li>\n                                        ))}\n                                    </ul>\n                                ) : null}\n                            </div>\n                        )}\n                    </>\n                ) : (\n                    <p>Unable to load user data.</p>\n                )}\n            </div>\n        </ProtectedRoute>\n    );\n}"],"names":[],"mappings":"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"}},
    {"offset": {"line": 1378, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}