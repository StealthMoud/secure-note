{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///app/app/register/page.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { registerUser } from '../services/auth';\n\nconst RegisterPage = () => {\n    const [name, setName] = useState<string>('');\n    const [email, setEmail] = useState<string>('');\n    const [password, setPassword] = useState<string>('');\n\n    const handleRegister = async (e: React.FormEvent) => {\n        e.preventDefault();\n        try {\n            await registerUser(name, email, password);\n            alert('Registration successful!');\n        } catch (error: any) {\n            alert(error.response.data.message || 'Registration failed');\n        }\n    };\n\n    return (\n        <div className=\"container mx-auto p-4\">\n            <h1 className=\"text-2xl mb-4\">Register</h1>\n            <form onSubmit={handleRegister} className=\"space-y-4\">\n                <input type=\"text\" placeholder=\"Name\" onChange={(e) => setName(e.target.value)} className=\"border p-2 w-full\" />\n                <input type=\"email\" placeholder=\"Email\" onChange={(e) => setEmail(e.target.value)} className=\"border p-2 w-full\" />\n                <input type=\"password\" placeholder=\"Password\" onChange={(e) => setPassword(e.target.value)} className=\"border p-2 w-full\" />\n                <button type=\"submit\" className=\"bg-blue-500 text-white p-2 w-full\">Register</button>\n            </form>\n        </div>\n    );\n};\n\nexport default RegisterPage;\n"],"names":[],"mappings":";;;;AAAA;;;;;;;;;AAGA,MAAM,eAAe;IACjB,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAU;IACzC,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAU;IAC3C,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAU;IAEjD,MAAM,iBAAiB,OAAO;QAC1B,EAAE,cAAc;QAChB,IAAI;YACA,MAAM,aAAa,MAAM,OAAO;YAChC,MAAM;QACV,EAAE,OAAO,OAAY;YACjB,MAAM,MAAM,QAAQ,CAAC,IAAI,CAAC,OAAO,IAAI;QACzC;IACJ;IAEA,qBACI,8OAAC;QAAI,WAAU;;0BACX,8OAAC;gBAAG,WAAU;0BAAgB;;;;;;0BAC9B,8OAAC;gBAAK,UAAU;gBAAgB,WAAU;;kCACtC,8OAAC;wBAAM,MAAK;wBAAO,aAAY;wBAAO,UAAU,CAAC,IAAM,QAAQ,EAAE,MAAM,CAAC,KAAK;wBAAG,WAAU;;;;;;kCAC1F,8OAAC;wBAAM,MAAK;wBAAQ,aAAY;wBAAQ,UAAU,CAAC,IAAM,SAAS,EAAE,MAAM,CAAC,KAAK;wBAAG,WAAU;;;;;;kCAC7F,8OAAC;wBAAM,MAAK;wBAAW,aAAY;wBAAW,UAAU,CAAC,IAAM,YAAY,EAAE,MAAM,CAAC,KAAK;wBAAG,WAAU;;;;;;kCACtG,8OAAC;wBAAO,MAAK;wBAAS,WAAU;kCAAoC;;;;;;;;;;;;;;;;;;AAIpF;uCAEe"}},
    {"offset": {"line": 101, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 112, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 112, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 118, "column": 0}, "map": {"version":3,"sources":["file:///app/node_modules/next/dist/src/build/templates/app-page.ts"],"sourcesContent":["import type { LoaderTree } from '../../server/lib/app-dir-module'\nimport { AppPageRouteModule } from '../../server/route-modules/app-page/module.compiled' with { 'turbopack-transition': 'next-ssr' }\nimport { RouteKind } from '../../server/route-kind'\n\n// These are injected by the loader afterwards.\n\n/**\n * The tree created in next-app-loader that holds component segments and modules\n * and I've updated it.\n */\ndeclare const tree: LoaderTree\ndeclare const pages: any\n\n// We inject the tree and pages here so that we can use them in the route\n// module.\n// INJECT:tree\n// INJECT:pages\n\nexport { tree, pages }\n\nexport { default as GlobalError } from 'VAR_MODULE_GLOBAL_ERROR'\n\n// These are injected by the loader afterwards.\ndeclare const __next_app_require__: any\ndeclare const __next_app_load_chunk__: any\n\n// INJECT:__next_app_require__\n// INJECT:__next_app_load_chunk__\n\nexport const __next_app__ = {\n  require: __next_app_require__,\n  loadChunk: __next_app_load_chunk__,\n}\n\nexport * from '../../server/app-render/entry-base'\n\n// Create and export the route module that will be consumed.\nexport const routeModule = new AppPageRouteModule({\n  definition: {\n    kind: RouteKind.APP_PAGE,\n    page: 'VAR_DEFINITION_PAGE',\n    pathname: 'VAR_DEFINITION_PATHNAME',\n    // The following aren't used in production.\n    bundlePath: '',\n    filename: '',\n    appPaths: [],\n  },\n  userland: {\n    loaderTree: tree,\n  },\n})\n"],"names":["AppPageRouteModule","RouteKind","tree","pages","default","GlobalError","__next_app__","require","__next_app_require__","loadChunk","__next_app_load_chunk__","routeModule","definition","kind","APP_PAGE","page","pathname","bundlePath","filename","appPaths","userland","loaderTree"],"mappings":";;;;;;AA0BA,8BAA8B;AAzB9B,SAASA,kBAAkB,QAAQ,2DAA2D;IAAE,wBAAwB;AAAW,EAAC;AAYpI,yEAAyE;AAEzE,cAAc;AAGd,SAASE,IAAI,EAAEC,KAAK,GAAE;AAWtB,OAAO,MAAMG,eAAe;AAG5B,EAAC;;;;;;;;;;AAED,cAAc,qCAAoC,sBAAA;AAElD,UAAA,kDAA4D;AAC5D,MAAA,CAAO,MAAMK;IAAAA;IAAAA,SAAc,IAAIX,mBAAmB;YAChDY,QAAAA;YAAAA,GAAY;YAAA;wBACVC,IAAAA;oBAAAA,CAAMZ,UAAUa;oBAAAA,OAAQ;yBACxBC,MAAM;8BACNC,IAAAA,CAAAA,GAAU;wBAAA,QAAA;4BAAA,IAAA;4BAAA;yBAAA;;uBACV,2CAA2C;;iBAC3CC,YAAY;sBACZC,IAAAA,CAAAA;YAAAA,CAAU;SAAA;;SACVC,UAAU,EAAE;UACd,QAAA;YAAA,MAAA;gBACAC,OAAU,QAAA;wBAAA;4BACRC,KAAAA,CAAAA,GAAAA,IAAYnB,uKAAZmB,CAAAA,sBAAYnB,EAAAA,MAAAA,MAAAA,MAAAA,EAAAA,iBAAAA,CAAAA,CAAAA,EAAAA,mSAAAA,CAAAA,UAAAA,CAAAA,GAAAA,CAAAA,KAAAA,CAAAA,KAAAA,MAAAA,CAAAA,CAAAA,EAAAA,CAAAA,EAAAA,EAAAA;4BACd,OAAA,GAAA,mSAAA,CAAA,UAAA,CAAA,KAAA,CAAA,CAAA,EAAA,mSAAA,CAAA,UAAA,CAAA,MAAA,EAAA;4BACA,MAAA,CAAA,YAAA,CAAA","ignoreList":[0]}},
    {"offset": {"line": 223, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}