{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 111, "column": 0}, "map": {"version":3,"sources":["file:///app/src/services/api.ts"],"sourcesContent":["import axios from 'axios';\n\nconst API_URL = process.env.NEXT_PUBLIC_BACKEND_URL;\n\nexport const api = axios.create({\n    baseURL: `${API_URL}/api`,\n    timeout: 5000,\n    headers: {\n        'Content-Type': 'application/json',\n    },\n});\n\nexport default api;\n\n"],"names":[],"mappings":";;;;AAAA;;AAEA,MAAM;AAEC,MAAM,MAAM,qIAAA,CAAA,UAAK,CAAC,MAAM,CAAC;IAC5B,SAAS,GAAG,QAAQ,IAAI,CAAC;IACzB,SAAS;IACT,SAAS;QACL,gBAAgB;IACpB;AACJ;uCAEe"}},
    {"offset": {"line": 126, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 132, "column": 0}, "map": {"version":3,"sources":["file:///app/src/services/auth.ts"],"sourcesContent":["import api from './api';\n\ninterface User {\n    _id: string;\n    username: string;\n    email: string;\n    role: string;\n}\n\ninterface LoginResponse {\n    token: string;\n    user: User;\n}\n\ninterface RegisterResponse {\n    message: string;\n}\n\ninterface UserResponse {\n    user: User;\n    role: string;\n}\n\ninterface VerifyEmailResponse {\n    message: string;\n}\n\n\nexport const registerUser = async (\n    username: string,\n    email: string,\n    password: string,\n    confirmPassword: string\n): Promise<RegisterResponse> => {\n    try {\n        const response = await api.post<RegisterResponse>('/auth/register', {\n            username,\n            email,\n            password,\n            confirmPassword,\n        });\n        return response.data;\n    } catch (error: any) {\n        if (error.response?.data?.errors) {\n            const fieldErrors: Record<string, string> = {};\n            error.response.data.errors.forEach((err: any) => {\n                fieldErrors[err.path || err.param] = err.msg;\n            });\n            throw { fieldErrors };\n        }\n        throw new Error(error.response?.data?.error || 'Registration failed');\n    }\n};\n\n\n\nexport const loginUser = async (identifier: string, password: string): Promise<LoginResponse> => {\n    try {\n        const response = await api.post<LoginResponse>('/auth/login', {identifier, password});\n        return response.data;\n    } catch (error: any) {\n        if (error.response?.data?.errors) {\n            const fieldErrors: Record<string, string> = {};\n            error.response.data.errors.forEach((err: any) => {\n                fieldErrors[err.path || err.param] = err.msg;\n            });\n            throw { fieldErrors };\n        }\n        throw new Error(error.response?.data?.error || 'Login failed');\n    }\n};\n\nexport const initiateOAuthLogin = async (provider: 'google' | 'github'): Promise<void> => {\n    // Since this is a redirect, we donâ€™t need to handle the response here\n    // The browser will handle the redirect to the backend OAuth endpoint\n    window.location.href = `${process.env.NEXT_PUBLIC_BACKEND_URL}/api/auth/${provider}`;\n};\n\n\n\n\n    export const requestPasswordReset = async (email: string): Promise<{ message: string }> => {\n    try {\n        const response = await api.post<{ message: string }>('/auth/request-password-reset', { email });\n        return response.data;\n    } catch (error: any) {\n        if (error.response?.data?.errors) {\n            const fieldErrors: Record<string, string> = {};\n            error.response.data.errors.forEach((err: any) => {\n                fieldErrors[err.path || err.param] = err.msg;\n            });\n            throw { fieldErrors };\n        }\n        throw new Error(error.response?.data?.error || 'Failed to request password reset');\n    }\n};\n\nexport const resetPassword = async (token: string, newPassword: string): Promise<{ message: string }> => {\n    try {\n        const response = await api.post<{ message: string }>('/auth/reset-password', { token, newPassword });\n        return response.data;\n    } catch (error: any) {\n        if (error.response?.data?.errors) {\n            const fieldErrors: Record<string, string> = {};\n            error.response.data.errors.forEach((err: any) => {\n                fieldErrors[err.path || err.param] = err.msg;\n            });\n            throw { fieldErrors };\n        }\n        throw new Error(error.response?.data?.error || 'Failed to reset password');\n    }\n};\n\n// Verify Email\nexport const verifyEmail = async (token: string): Promise<VerifyEmailResponse> => {\n    try {\n        const response = await api.get<VerifyEmailResponse>(`/auth/verify-email?token=${token}`);\n        return response.data; // Typed as VerifyEmailResponse\n    } catch (error: any) {\n        throw new Error(error.response?.data?.error || 'Email verification failed');\n    }\n};\n\n// Get Current User\nexport const getCurrentUser = async (token: string): Promise<UserResponse> => {\n    try {\n        const response = await api.get<UserResponse>('/users/me', {\n            headers: {Authorization: `Bearer ${token}`},\n        });\n        return response.data;\n    } catch (error: any) {\n        throw new Error(error.response?.data?.error || 'Failed to fetch user');\n    }\n};\n\nexport const requestVerification = async (): Promise<{ message: string }> => {\n    try {\n        const token = localStorage.getItem('token');\n        const response = await api.post<{ message: string }>('/auth/request-verification', {}, {\n            headers: {Authorization: `Bearer ${token}`},\n        });\n        return response.data;\n    } catch (error: any) {\n        throw new Error(error.response?.data?.error || 'Failed to request verification');\n    }\n};\n\nexport const approveVerification = async (userId: string): Promise<{ message: string }> => {\n    try {\n        const token = localStorage.getItem('token');\n        const response = await api.post<{ message: string }>('/auth/approve-verification', {userId}, {\n            headers: {Authorization: `Bearer ${token}`},\n        });\n        return response.data;\n    } catch (error: any) {\n        throw new Error(error.response?.data?.error || 'Failed to approve verification');\n    }\n};"],"names":[],"mappings":"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"}},
    {"offset": {"line": 279, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 285, "column": 0}, "map": {"version":3,"sources":["file:///app/app/register/page.tsx"],"sourcesContent":["'use client';\nimport { useEffect, useState } from 'react';\nimport { registerUser } from '@/services/auth';\nimport Link from 'next/link';\nimport {\n    CheckCircleIcon,\n    EnvelopeIcon,\n    EyeIcon,\n    EyeSlashIcon,\n    LockClosedIcon,\n    UserIcon,\n    UserPlusIcon,\n    XCircleIcon,\n    XMarkIcon,\n} from '@heroicons/react/24/outline';\n\nexport default function RegisterPage() {\n    const [username, setUsername] = useState<string>('');\n    const [email, setEmail] = useState<string>('');\n    const [password, setPassword] = useState<string>('');\n    const [confirmPassword, setConfirmPassword] = useState<string>('');\n    const [showPassword, setShowPassword] = useState(false);\n    const [loading, setLoading] = useState(false);\n\n    const [errors, setErrors] = useState<Record<string, string>>({});\n    const [fieldErrorVisibility, setFieldErrorVisibility] = useState<Record<string, boolean>>({});\n    const [error, setError] = useState<string>('');\n    const [message, setMessage] = useState<string>('');\n    const [isExitingError, setIsExitingError] = useState(false);\n    const [isExitingMessage, setIsExitingMessage] = useState(false);\n\n    // Client-side validation\n    const validateForm = () => {\n        const newErrors: Record<string, string> = {};\n        if (!username) newErrors.username = 'Username is required';\n        if (!email) newErrors.email = 'Email is required';\n        else if (!/\\S+@\\S+\\.\\S+/.test(email)) newErrors.email = 'Email is invalid';\n        if (!password) newErrors.password = 'Password is required';\n        else if (password.length < 6) newErrors.password = 'Password must be at least 6 characters';\n        if (!confirmPassword) newErrors.confirmPassword = 'Confirm Password is required';\n        else if (password !== confirmPassword) newErrors.confirmPassword = 'Passwords do not match';\n\n        if (Object.keys(newErrors).length > 0) {\n            setErrors(newErrors);\n            const visibility: Record<string, boolean> = {};\n            Object.keys(newErrors).forEach((field) => {\n                visibility[field] = true;\n                setTimeout(() => {\n                    setFieldErrorVisibility((prev) => ({ ...prev, [field]: false }));\n                    setTimeout(() => {\n                        setErrors((prev) => {\n                            const updatedErrors = { ...prev };\n                            delete updatedErrors[field];\n                            return updatedErrors;\n                        });\n                    }, 500);\n                }, 3000);\n            });\n            setFieldErrorVisibility(visibility);\n        }\n        return Object.keys(newErrors).length === 0;\n    };\n\n    // Password strength calculation\n    const getPasswordStrength = () => {\n        if (!password) return '';\n        if (password.length < 6) return 'Weak';\n        if (/[A-Z]/.test(password) && /[0-9]/.test(password) && /[!@#$%^&*]/.test(password)) return 'Strong';\n        return 'Medium';\n    };\n\n    const handleRegister = async (e: React.FormEvent) => {\n        e.preventDefault();\n        if (!validateForm()) return;\n\n        setError('');\n        setFieldErrorVisibility({});\n        setMessage('');\n        setIsExitingError(false);\n        setIsExitingMessage(false);\n        setLoading(true);\n\n        try {\n            const data = await registerUser(username, email, password, confirmPassword);\n            setMessage(data.message || 'Registration successful!');\n            setUsername('');\n            setEmail('');\n            setPassword('');\n            setConfirmPassword('');\n        } catch (err: any) {\n            if (err.fieldErrors) {\n                setErrors(err.fieldErrors);\n                const visibility: Record<string, boolean> = {};\n                Object.keys(err.fieldErrors).forEach((field) => {\n                    visibility[field] = true;\n                    setTimeout(() => {\n                        setFieldErrorVisibility((prev) => ({ ...prev, [field]: false }));\n                        setTimeout(() => {\n                            setErrors((prev) => {\n                                const newErrors = { ...prev };\n                                delete newErrors[field];\n                                return newErrors;\n                            });\n                        }, 500);\n                    }, 3000);\n                });\n                setFieldErrorVisibility(visibility);\n            } else {\n                setError(err.message || 'Registration failed');\n            }\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    const dismissFieldError = (field: string) => {\n        setFieldErrorVisibility((prev) => ({ ...prev, [field]: false }));\n        setTimeout(() => {\n            setErrors((prev) => {\n                const newErrors = { ...prev };\n                delete newErrors[field];\n                return newErrors;\n            });\n        }, 500);\n    };\n\n    useEffect(() => {\n        document.title = 'Register | Secure Note';\n    }, []);\n\n    useEffect(() => {\n        if (error && !isExitingError) {\n            const timer = setTimeout(() => {\n                setIsExitingError(true);\n                setTimeout(() => setError(''), 500);\n            }, 3000);\n            return () => clearTimeout(timer);\n        }\n    }, [error, isExitingError]);\n\n    useEffect(() => {\n        if (message && !isExitingMessage) {\n            const timer = setTimeout(() => {\n                setIsExitingMessage(true);\n                setTimeout(() => setMessage(''), 500);\n            }, 3000);\n            return () => clearTimeout(timer);\n        }\n    }, [message, isExitingMessage]);\n\n    return (\n        <div className=\"bg-white dark:bg-gray-800 p-8 rounded-2xl shadow-[0_0_10px_rgba(0,0,0,0.05)] dark:shadow-[0_0_10px_rgba(255,255,255,0.1)] border border-gray-200 dark:border-gray-700 text-center w-full max-w-md mx-auto my-12\">\n            <h1 className=\"text-3xl font-bold tracking-wide text-gray-900 dark:text-gray-100 mt-4 mb-6 flex items-center justify-center\">\n                <UserPlusIcon className=\"h-8 w-8 mr-2 text-gray-400 dark:text-gray-500\" />\n                Register\n            </h1>\n            <form onSubmit={handleRegister} className=\"space-y-4\" noValidate>\n                {/* Username Field */}\n                <div className=\"space-y-1\">\n                    <label htmlFor=\"username\" className=\"sr-only\">\n                        Username\n                    </label>\n                    <div className=\"relative\">\n                        <UserIcon className=\"absolute left-3 top-1/2 transform -translate-y-1/2 h-5 w-5 text-gray-400 dark:text-gray-500 pointer-events-none\" />\n                        <input\n                            id=\"username\"\n                            type=\"text\"\n                            value={username}\n                            onChange={(e) => setUsername(e.target.value)}\n                            placeholder=\"Username\"\n                            className=\"w-full pl-10 p-3 bg-gray-200 dark:bg-gray-700 text-gray-900 dark:text-gray-100 rounded-md focus:outline-none focus:ring-2 focus:ring-slate-600 dark:focus:ring-slate-500 transition duration-200\"\n                            aria-describedby=\"username-error\"\n                        />\n                    </div>\n                    {errors.username && (\n                        <p\n                            id=\"username-error\"\n                            className={`min-h-[18px] text-sm text-red-500 transition-opacity duration-300 ease-in-out flex items-center ${\n                                fieldErrorVisibility.username ? 'opacity-100 animate-fadeInShort' : 'opacity-0'\n                            }`}\n                        >\n                            {errors.username}\n                            <button onClick={() => dismissFieldError('username')} className=\"ml-2\">\n                                <XMarkIcon className=\"h-4 w-4 text-red-500\" />\n                            </button>\n                        </p>\n                    )}\n                </div>\n\n                {/* Email Field */}\n                <div className=\"space-y-1\">\n                    <label htmlFor=\"email\" className=\"sr-only\">\n                        Email\n                    </label>\n                    <div className=\"relative\">\n                        <EnvelopeIcon className=\"absolute left-3 top-1/2 transform -translate-y-1/2 h-5 w-5 text-gray-400 dark:text-gray-500 pointer-events-none\" />\n                        <input\n                            id=\"email\"\n                            type=\"email\"\n                            value={email}\n                            onChange={(e) => setEmail(e.target.value)}\n                            placeholder=\"Email\"\n                            className=\"w-full pl-10 p-3 bg-gray-200 dark:bg-gray-700 text-gray-900 dark:text-gray-100 rounded-md focus:outline-none focus:ring-2 focus:ring-slate-600 dark:focus:ring-slate-500 transition duration-200\"\n                            aria-describedby=\"email-error\"\n                        />\n                    </div>\n                    {errors.email && (\n                        <p\n                            id=\"email-error\"\n                            className={`min-h-[18px] text-sm text-red-500 transition-opacity duration-300 ease-in-out flex items-center ${\n                                fieldErrorVisibility.email ? 'opacity-100 animate-fadeInShort' : 'opacity-0'\n                            }`}\n                        >\n                            {errors.email}\n                            <button onClick={() => dismissFieldError('email')} className=\"ml-2\">\n                                <XMarkIcon className=\"h-4 w-4 text-red-500\" />\n                            </button>\n                        </p>\n                    )}\n                </div>\n\n                {/* Password Field */}\n                <div className=\"space-y-1\">\n                    <label htmlFor=\"password\" className=\"sr-only\">\n                        Password\n                    </label>\n                    <div className=\"relative\">\n                        <LockClosedIcon className=\"absolute left-3 top-1/2 transform -translate-y-1/2 h-5 w-5 text-gray-400 dark:text-gray-500 pointer-events-none\" />\n                        <input\n                            id=\"password\"\n                            type={showPassword ? 'text' : 'password'}\n                            value={password}\n                            onChange={(e) => setPassword(e.target.value)}\n                            placeholder=\"Password\"\n                            className=\"w-full pl-10 pr-10 p-3 bg-gray-200 dark:bg-gray-700 text-gray-900 dark:text-gray-100 rounded-md focus:outline-none focus:ring-2 focus:ring-slate-600 dark:focus:ring-slate-500 transition duration-200\"\n                            aria-describedby=\"password-error\"\n                        />\n                        <button\n                            type=\"button\"\n                            onClick={() => setShowPassword(!showPassword)}\n                            className=\"absolute right-3 top-1/2 transform -translate-y-1/2 text-gray-400 hover:text-gray-600 dark:hover:text-gray-300\"\n                        >\n                            {showPassword ? <EyeSlashIcon className=\"h-5 w-5\" /> : <EyeIcon className=\"h-5 w-5\" />}\n                        </button>\n                    </div>\n                    {errors.password && (\n                        <p\n                            id=\"password-error\"\n                            className={`min-h-[18px] text-sm text-red-500 transition-opacity duration-300 ease-in-out flex items-center ${\n                                fieldErrorVisibility.password ? 'opacity-100 animate-fadeInShort' : 'opacity-0'\n                            }`}\n                        >\n                            {errors.password}\n                            <button onClick={() => dismissFieldError('password')} className=\"ml-2\">\n                                <XMarkIcon className=\"h-4 w-4 text-red-500\" />\n                            </button>\n                        </p>\n                    )}\n                    {password && (\n                        <p className=\"text-sm text-gray-600 dark:text-gray-400\">\n                            Strength:{' '}\n                            <span\n                                className={\n                                    getPasswordStrength() === 'Strong'\n                                        ? 'text-green-500'\n                                        : getPasswordStrength() === 'Medium'\n                                            ? 'text-yellow-500'\n                                            : 'text-red-500'\n                                }\n                            >\n                            {getPasswordStrength()}\n                        </span>\n                        </p>\n                    )}\n                </div>\n\n                {/* Confirm Password Field */}\n                <div className=\"space-y-1\">\n                    <label htmlFor=\"confirmPassword\" className=\"sr-only\">\n                        Confirm Password\n                    </label>\n                    <div className=\"relative\">\n                        <LockClosedIcon className=\"absolute left-3 top-1/2 transform -translate-y-1/2 h-5 w-5 text-gray-400 dark:text-gray-500 pointer-events-none\" />\n                        <input\n                            id=\"confirmPassword\"\n                            type={showPassword ? 'text' : 'password'}\n                            value={confirmPassword}\n                            onChange={(e) => setConfirmPassword(e.target.value)}\n                            placeholder=\"Confirm Password\"\n                            className=\"w-full pl-10 pr-10 p-3 bg-gray-200 dark:bg-gray-700 text-gray-900 dark:text-gray-100 rounded-md focus:outline-none focus:ring-2 focus:ring-slate-600 dark:focus:ring-slate-500 transition duration-200\"\n                            aria-describedby=\"confirmPassword-error\"\n                        />\n                        <button\n                            type=\"button\"\n                            onClick={() => setShowPassword(!showPassword)}\n                            className=\"absolute right-3 top-1/2 transform -translate-y-1/2 text-gray-400 hover:text-gray-600 dark:hover:text-gray-300\"\n                        >\n                            {showPassword ? <EyeSlashIcon className=\"h-5 w-5\" /> : <EyeIcon className=\"h-5 w-5\" />}\n                        </button>\n                    </div>\n                    {errors.confirmPassword && (\n                        <p\n                            id=\"confirmPassword-error\"\n                            className={`min-h-[18px] text-sm text-red-500 transition-opacity duration-300 ease-in-out flex items-center ${\n                                fieldErrorVisibility.confirmPassword ? 'opacity-100 animate-fadeInShort' : 'opacity-0'\n                            }`}\n                        >\n                            {errors.confirmPassword}\n                            <button onClick={() => dismissFieldError('confirmPassword')} className=\"ml-2\">\n                                <XMarkIcon className=\"h-4 w-4 text-red-500\" />\n                            </button>\n                        </p>\n                    )}\n                </div>\n\n                <button\n                    type=\"submit\"\n                    disabled={loading}\n                    className={`w-full bg-white dark:bg-slate-600 border border-gray-300 dark:border-none text-gray-900 dark:text-gray-100 px-5 py-2.5 rounded hover:bg-gray-100 dark:hover:bg-slate-400 transition duration-200 text-base flex items-center justify-center ${\n                        loading ? 'opacity-50 cursor-not-allowed' : ''\n                    }`}\n                >\n                    {loading ? (\n                        <svg\n                            className=\"animate-spin h-5 w-5 mr-2 text-gray-900 dark:text-gray-100\"\n                            xmlns=\"http://www.w3.org/2000/svg\"\n                            fill=\"none\"\n                            viewBox=\"0 0 24 24\"\n                        >\n                            <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\"></circle>\n                            <path\n                                className=\"opacity-75\"\n                                fill=\"currentColor\"\n                                d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"\n                            ></path>\n                        </svg>\n                    ) : null}\n                    Register\n                </button>\n\n                {error && (\n                    <p\n                        className={`bg-red-100 dark:bg-red-900 text-red-800 dark:text-red-200 text-sm p-2 rounded-md animate-fadeInShort flex items-center transition-opacity duration-500 ${\n                            isExitingError ? 'opacity-0' : 'opacity-100'\n                        }`}\n                    >\n                        <XCircleIcon className=\"h-5 w-5 mr-2 text-red-800 dark:text-red-200\" />\n                        {error}\n                        <button onClick={() => setError('')} className=\"ml-auto\">\n                            <XMarkIcon className=\"h-5 w-5 text-red-800 dark:text-red-200\" />\n                        </button>\n                    </p>\n                )}\n                {message && (\n                    <p\n                        className={`bg-green-100 dark:bg-green-900 text-green-800 dark:text-green-200 text-sm p-2 rounded-md animate-fadeInShort flex items-center transition-opacity duration-500 ${\n                            isExitingMessage ? 'opacity-0' : 'opacity-100'\n                        }`}\n                    >\n                        <CheckCircleIcon className=\"h-5 w-5 mr-2 text-green-800 dark:text-green-200\" />\n                        {message}\n                        <button onClick={() => setMessage('')} className=\"ml-auto\">\n                            <XMarkIcon className=\"h-5 w-5 text-green-800 dark:text-green-200\" />\n                        </button>\n                    </p>\n                )}\n            </form>\n            <p className=\"mt-4 text-sm text-gray-900 dark:text-gray-100\">\n                Already have an account?{' '}\n                <Link\n                    href=\"/login\"\n                    className=\"text-slate-600 dark:text-slate-500 hover:text-slate-400 dark:hover:text-slate-300 hover:underline transition duration-200\"\n                >\n                    Login\n                </Link>\n            </p>\n        </div>\n    );\n}"],"names":[],"mappings":"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"}},
    {"offset": {"line": 972, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}