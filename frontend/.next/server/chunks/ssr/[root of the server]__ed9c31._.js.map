{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 135, "column": 0}, "map": {"version":3,"sources":["file:///app/src/services/api.ts"],"sourcesContent":["import axios from 'axios';\n\nconst API_URL = process.env.NEXT_PUBLIC_BACKEND_URL;\n\nexport const api = axios.create({\n    baseURL: `${API_URL}/api`, // Proxy rewrites /api to backend\n    timeout: 5000,\n    headers: {\n        'Content-Type': 'application/json',\n    },\n});\n\n// No specific functions hereâ€”keep it generic\nexport default api;"],"names":[],"mappings":";;;;AAAA;;AAEA,MAAM;AAEC,MAAM,MAAM,qIAAA,CAAA,UAAK,CAAC,MAAM,CAAC;IAC5B,SAAS,GAAG,QAAQ,IAAI,CAAC;IACzB,SAAS;IACT,SAAS;QACL,gBAAgB;IACpB;AACJ;uCAGe"}},
    {"offset": {"line": 150, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 156, "column": 0}, "map": {"version":3,"sources":["file:///app/src/services/auth.ts"],"sourcesContent":["import api from './api';\n\n// Define response types\ninterface User {\n    _id: string;\n    username: string;\n    email: string;\n    role: string;\n}\n\ninterface LoginResponse {\n    token: string;\n    user: User;\n}\n\ninterface RegisterResponse {\n    message: string;\n}\n\ninterface UserResponse {\n    user: User;\n    role: string;\n}\n\ninterface VerifyEmailResponse {\n    message: string;\n}\n\n// Register User\nexport const registerUser = async (\n    username: string,\n    email: string,\n    password: string,\n    confirmPassword: string\n): Promise<RegisterResponse> => {\n    try {\n        const response = await api.post<RegisterResponse>('/auth/register', {\n            username,\n            email,\n            password,\n            confirmPassword,\n        });\n        return response.data;\n    } catch (error: any) {\n        throw new Error(error.response?.data?.error || 'Registration failed');\n    }\n};\n\n// Login User\nexport const loginUser = async (identifier: string, password: string): Promise<LoginResponse> => {\n    try {\n        const response = await api.post<LoginResponse>('/auth/login', { identifier, password });\n        return response.data;\n    } catch (error: any) {\n        throw new Error(error.response?.data?.error || 'Login failed');\n    }\n};\n\n// Verify Email\nexport const verifyEmail = async (token: string): Promise<VerifyEmailResponse> => {\n    try {\n        const response = await api.get<VerifyEmailResponse>(`/auth/verify-email?token=${token}`);\n        return response.data; // Typed as VerifyEmailResponse\n    } catch (error: any) {\n        throw new Error(error.response?.data?.error || 'Email verification failed');\n    }\n};\n\n// Get Current User\nexport const getCurrentUser = async (token: string): Promise<UserResponse> => {\n    try {\n        const response = await api.get<UserResponse>('/auth/me', {\n            headers: { Authorization: `Bearer ${token}` },\n        });\n        return response.data;\n    } catch (error: any) {\n        throw new Error(error.response?.data?.error || 'Failed to fetch user');\n    }\n};\n\nexport const requestVerification = async (): Promise<{ message: string }> => {\n    try {\n        const token = localStorage.getItem('token');\n        const response = await api.post<{ message: string }>('/auth/request-verification', {}, {\n            headers: { Authorization: `Bearer ${token}` },\n        });\n        return response.data;\n    } catch (error: any) {\n        throw new Error(error.response?.data?.error || 'Failed to request verification');\n    }\n};\n\nexport const approveVerification = async (userId: string): Promise<{ message: string }> => {\n    try {\n        const token = localStorage.getItem('token');\n        const response = await api.post<{ message: string }>('/auth/approve-verification', { userId }, {\n            headers: { Authorization: `Bearer ${token}` },\n        });\n        return response.data;\n    } catch (error: any) {\n        throw new Error(error.response?.data?.error || 'Failed to approve verification');\n    }\n};"],"names":[],"mappings":";;;;;;;;AAAA;;AA6BO,MAAM,eAAe,OACxB,UACA,OACA,UACA;IAEA,IAAI;QACA,MAAM,WAAW,MAAM,sHAAA,CAAA,UAAG,CAAC,IAAI,CAAmB,kBAAkB;YAChE;YACA;YACA;YACA;QACJ;QACA,OAAO,SAAS,IAAI;IACxB,EAAE,OAAO,OAAY;QACjB,MAAM,IAAI,MAAM,MAAM,QAAQ,EAAE,MAAM,SAAS;IACnD;AACJ;AAGO,MAAM,YAAY,OAAO,YAAoB;IAChD,IAAI;QACA,MAAM,WAAW,MAAM,sHAAA,CAAA,UAAG,CAAC,IAAI,CAAgB,eAAe;YAAE;YAAY;QAAS;QACrF,OAAO,SAAS,IAAI;IACxB,EAAE,OAAO,OAAY;QACjB,MAAM,IAAI,MAAM,MAAM,QAAQ,EAAE,MAAM,SAAS;IACnD;AACJ;AAGO,MAAM,cAAc,OAAO;IAC9B,IAAI;QACA,MAAM,WAAW,MAAM,sHAAA,CAAA,UAAG,CAAC,GAAG,CAAsB,CAAC,yBAAyB,EAAE,OAAO;QACvF,OAAO,SAAS,IAAI,EAAE,+BAA+B;IACzD,EAAE,OAAO,OAAY;QACjB,MAAM,IAAI,MAAM,MAAM,QAAQ,EAAE,MAAM,SAAS;IACnD;AACJ;AAGO,MAAM,iBAAiB,OAAO;IACjC,IAAI;QACA,MAAM,WAAW,MAAM,sHAAA,CAAA,UAAG,CAAC,GAAG,CAAe,YAAY;YACrD,SAAS;gBAAE,eAAe,CAAC,OAAO,EAAE,OAAO;YAAC;QAChD;QACA,OAAO,SAAS,IAAI;IACxB,EAAE,OAAO,OAAY;QACjB,MAAM,IAAI,MAAM,MAAM,QAAQ,EAAE,MAAM,SAAS;IACnD;AACJ;AAEO,MAAM,sBAAsB;IAC/B,IAAI;QACA,MAAM,QAAQ,aAAa,OAAO,CAAC;QACnC,MAAM,WAAW,MAAM,sHAAA,CAAA,UAAG,CAAC,IAAI,CAAsB,8BAA8B,CAAC,GAAG;YACnF,SAAS;gBAAE,eAAe,CAAC,OAAO,EAAE,OAAO;YAAC;QAChD;QACA,OAAO,SAAS,IAAI;IACxB,EAAE,OAAO,OAAY;QACjB,MAAM,IAAI,MAAM,MAAM,QAAQ,EAAE,MAAM,SAAS;IACnD;AACJ;AAEO,MAAM,sBAAsB,OAAO;IACtC,IAAI;QACA,MAAM,QAAQ,aAAa,OAAO,CAAC;QACnC,MAAM,WAAW,MAAM,sHAAA,CAAA,UAAG,CAAC,IAAI,CAAsB,8BAA8B;YAAE;QAAO,GAAG;YAC3F,SAAS;gBAAE,eAAe,CAAC,OAAO,EAAE,OAAO;YAAC;QAChD;QACA,OAAO,SAAS,IAAI;IACxB,EAAE,OAAO,OAAY;QACjB,MAAM,IAAI,MAAM,MAAM,QAAQ,EAAE,MAAM,SAAS;IACnD;AACJ"}},
    {"offset": {"line": 238, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 244, "column": 0}, "map": {"version":3,"sources":["file:///app/src/components/ProtectedRoute.tsx"],"sourcesContent":["'use client';\nimport React, { useEffect, useState } from 'react';\nimport { useRouter } from 'next/navigation'; // Updated for App Router\nimport { getCurrentUser } from '@/services/auth'; // Updated import\n\ninterface Props {\n    children: React.ReactNode;\n}\n\nexport default function ProtectedRoute({ children }: Props) {\n    const router = useRouter();\n    const [loading, setLoading] = useState(true);\n\n    useEffect(() => {\n        const checkAuth = async () => {\n            const token = localStorage.getItem('token');\n            if (!token) {\n                router.push('/login');\n                return;\n            }\n            try {\n                await getCurrentUser(token); // Verify token\n                setLoading(false);\n            } catch (error) {\n                localStorage.removeItem('token');\n                router.push('/login');\n            }\n        };\n        checkAuth();\n    }, [router]);\n\n    if (loading) return <div className=\"text-center mt-10\">Loading...</div>;\n\n    return <>{children}</>;\n}"],"names":[],"mappings":";;;;AACA;AACA,mOAA6C,yBAAyB;AACtE,6MAAkD,iBAAiB;AAHnE;;;;;AASe,SAAS,eAAe,EAAE,QAAQ,EAAS;IACtD,MAAM,SAAS,CAAA,GAAA,kIAAA,CAAA,YAAS,AAAD;IACvB,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAEvC,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACN,MAAM,YAAY;YACd,MAAM,QAAQ,aAAa,OAAO,CAAC;YACnC,IAAI,CAAC,OAAO;gBACR,OAAO,IAAI,CAAC;gBACZ;YACJ;YACA,IAAI;gBACA,MAAM,CAAA,GAAA,uHAAA,CAAA,iBAAc,AAAD,EAAE,QAAQ,eAAe;gBAC5C,WAAW;YACf,EAAE,OAAO,OAAO;gBACZ,aAAa,UAAU,CAAC;gBACxB,OAAO,IAAI,CAAC;YAChB;QACJ;QACA;IACJ,GAAG;QAAC;KAAO;IAEX,IAAI,SAAS,qBAAO,8OAAC;QAAI,WAAU;kBAAoB;;;;;;IAEvD,qBAAO;kBAAG;;AACd"}},
    {"offset": {"line": 290, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 296, "column": 0}, "map": {"version":3,"sources":["file:///app/app/dashboard/page.tsx"],"sourcesContent":["'use client';\nimport { useState, useEffect } from 'react';\nimport ProtectedRoute from '@/components/ProtectedRoute';\nimport { getCurrentUser, requestVerification } from '@/services/auth';\n\n\ninterface UserData {\n    user: {\n        _id: string;\n        username: string;\n        email: string;\n        role: string;\n        verified?: boolean;\n    };\n    role: string;\n}\n\nexport default function DashboardPage() {\n    const [user, setUser] = useState<UserData | null>(null);\n    const [loading, setLoading] = useState(true);\n    const [message, setMessage] = useState<string>('');\n    const [error, setError] = useState<string>('');\n\n    useEffect(() => {\n        const fetchUser = async () => {\n            const token = localStorage.getItem('token');\n            if (token) {\n                try {\n                    const data = await getCurrentUser(token);\n                    setUser(data);\n                } catch (error) {\n                    console.error('Failed to fetch user:', error);\n                    localStorage.removeItem('token');\n                    window.location.href = '/login';\n                }\n            }\n            setLoading(false);\n        };\n        fetchUser();\n    }, []);\n\n    const handleLogout = () => {\n        localStorage.removeItem('token');\n        window.location.href = '/login';\n    };\n\n    const handleRequestVerification = async () => {\n        try {\n            const data = await requestVerification();\n            setMessage(data.message); // Show success message\n        } catch (err: any) {\n            setError(err.message); // Show error if fails\n        }\n    };\n\n    if (loading) return <div className=\"text-center mt-10\">Loading...</div>;\n\n    return (\n        <ProtectedRoute>\n            <div className=\"container mx-auto p-4 max-w-4xl\">\n                <div className=\"flex justify-between items-center mb-4\">\n                    <h1 className=\"text-2xl font-bold\">Dashboard</h1>\n                    <button\n                        onClick={handleLogout}\n                        className=\"bg-red-500 text-white px-4 py-2 rounded hover:bg-red-600\"\n                    >\n                        Logout\n                    </button>\n                </div>\n                {user ? (\n                    <>\n                        <p className=\"mb-4\">Welcome, {user.user.username}!</p>\n                        {user.user.verified ? (\n                            <>\n                                {user.role === 'admin' && <p className=\"mb-4\">Youâ€™re an Adminâ€”manage away!</p>}\n                                {user.role === 'user' && (\n                                    <div className=\"border p-4 rounded\">\n                                        <h2 className=\"text-xl font-semibold mb-2\">Your Notes</h2>\n                                        <p className=\"text-gray-500\">Notes feature coming soon!</p>\n                                    </div>\n                                )}\n                            </>\n                        ) : (\n                            <div className=\"border p-4 rounded bg-yellow-100\">\n                                <p className=\"mb-2 text-yellow-800\">Your email is not verified. Limited access only.</p>\n                                <button\n                                    onClick={handleRequestVerification}\n                                    className=\"bg-blue-500 text-white px-4 py-2 rounded hover:bg-blue-600\"\n                                >\n                                    Request Verification\n                                </button>\n                                {error && <p className=\"text-red-500 text-sm mt-2\">{error}</p>}\n                                {message && <p className=\"text-green-500 text-sm mt-2\">{message}</p>}\n                            </div>\n                        )}\n                    </>\n                ) : (\n                    <p>Unable to load user data.</p>\n                )}\n            </div>\n        </ProtectedRoute>\n    );\n}"],"names":[],"mappings":";;;;AACA;AACA;AACA;AAHA;;;;;AAiBe,SAAS;IACpB,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAmB;IAClD,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACvC,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAU;IAC/C,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAU;IAE3C,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACN,MAAM,YAAY;YACd,MAAM,QAAQ,aAAa,OAAO,CAAC;YACnC,IAAI,OAAO;gBACP,IAAI;oBACA,MAAM,OAAO,MAAM,CAAA,GAAA,uHAAA,CAAA,iBAAc,AAAD,EAAE;oBAClC,QAAQ;gBACZ,EAAE,OAAO,OAAO;oBACZ,QAAQ,KAAK,CAAC,yBAAyB;oBACvC,aAAa,UAAU,CAAC;oBACxB,OAAO,QAAQ,CAAC,IAAI,GAAG;gBAC3B;YACJ;YACA,WAAW;QACf;QACA;IACJ,GAAG,EAAE;IAEL,MAAM,eAAe;QACjB,aAAa,UAAU,CAAC;QACxB,OAAO,QAAQ,CAAC,IAAI,GAAG;IAC3B;IAEA,MAAM,4BAA4B;QAC9B,IAAI;YACA,MAAM,OAAO,MAAM,CAAA,GAAA,uHAAA,CAAA,sBAAmB,AAAD;YACrC,WAAW,KAAK,OAAO,GAAG,uBAAuB;QACrD,EAAE,OAAO,KAAU;YACf,SAAS,IAAI,OAAO,GAAG,sBAAsB;QACjD;IACJ;IAEA,IAAI,SAAS,qBAAO,8OAAC;QAAI,WAAU;kBAAoB;;;;;;IAEvD,qBACI,8OAAC,oIAAA,CAAA,UAAc;kBACX,cAAA,8OAAC;YAAI,WAAU;;8BACX,8OAAC;oBAAI,WAAU;;sCACX,8OAAC;4BAAG,WAAU;sCAAqB;;;;;;sCACnC,8OAAC;4BACG,SAAS;4BACT,WAAU;sCACb;;;;;;;;;;;;gBAIJ,qBACG;;sCACI,8OAAC;4BAAE,WAAU;;gCAAO;gCAAU,KAAK,IAAI,CAAC,QAAQ;gCAAC;;;;;;;wBAChD,KAAK,IAAI,CAAC,QAAQ,iBACf;;gCACK,KAAK,IAAI,KAAK,yBAAW,8OAAC;oCAAE,WAAU;8CAAO;;;;;;gCAC7C,KAAK,IAAI,KAAK,wBACX,8OAAC;oCAAI,WAAU;;sDACX,8OAAC;4CAAG,WAAU;sDAA6B;;;;;;sDAC3C,8OAAC;4CAAE,WAAU;sDAAgB;;;;;;;;;;;;;yDAKzC,8OAAC;4BAAI,WAAU;;8CACX,8OAAC;oCAAE,WAAU;8CAAuB;;;;;;8CACpC,8OAAC;oCACG,SAAS;oCACT,WAAU;8CACb;;;;;;gCAGA,uBAAS,8OAAC;oCAAE,WAAU;8CAA6B;;;;;;gCACnD,yBAAW,8OAAC;oCAAE,WAAU;8CAA+B;;;;;;;;;;;;;iDAKpE,8OAAC;8BAAE;;;;;;;;;;;;;;;;;AAKvB"}},
    {"offset": {"line": 492, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}