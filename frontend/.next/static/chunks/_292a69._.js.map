{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///app/src/services/api.ts"],"sourcesContent":["import axios from 'axios';\n\nconst API_URL = process.env.NEXT_PUBLIC_BACKEND_URL;\n\nexport const api = axios.create({\n    baseURL: `${API_URL}/api`,\n    timeout: 5000,\n    headers: {\n        'Content-Type': 'application/json',\n    },\n});\n\nexport default api;\n\n"],"names":[],"mappings":";;;;AAEgB;AAFhB;;AAEA,MAAM;AAEC,MAAM,MAAM,wIAAA,CAAA,UAAK,CAAC,MAAM,CAAC;IAC5B,SAAS,GAAG,QAAQ,IAAI,CAAC;IACzB,SAAS;IACT,SAAS;QACL,gBAAgB;IACpB;AACJ;uCAEe"}},
    {"offset": {"line": 26, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 32, "column": 0}, "map": {"version":3,"sources":["file:///app/src/services/auth.ts"],"sourcesContent":["import api from './api';\n\ninterface User {\n    _id: string;\n    username: string;\n    email: string;\n    role: string;\n}\n\ninterface LoginResponse {\n    token: string;\n    user: User;\n}\n\ninterface RegisterResponse {\n    message: string;\n}\n\ninterface UserResponse {\n    user: User;\n    role: string;\n}\n\ninterface VerifyEmailResponse {\n    message: string;\n}\n\n\nexport const registerUser = async (\n    username: string,\n    email: string,\n    password: string,\n    confirmPassword: string\n): Promise<RegisterResponse> => {\n    try {\n        const response = await api.post<RegisterResponse>('/auth/register', {\n            username,\n            email,\n            password,\n            confirmPassword,\n        });\n        return response.data;\n    } catch (error: any) {\n        if (error.response?.data?.errors) {\n            const fieldErrors: Record<string, string> = {};\n            error.response.data.errors.forEach((err: any) => {\n                fieldErrors[err.path || err.param] = err.msg;\n            });\n            throw { fieldErrors };\n        }\n        throw new Error(error.response?.data?.error || 'Registration failed');\n    }\n};\n\n\n// Login User\nexport const loginUser = async (identifier: string, password: string): Promise<LoginResponse> => {\n    try {\n        const response = await api.post<LoginResponse>('/auth/login', {identifier, password});\n        return response.data;\n    } catch (error: any) {\n        throw new Error(error.response?.data?.error || 'Login failed');\n    }\n};\n\n// Verify Email\nexport const verifyEmail = async (token: string): Promise<VerifyEmailResponse> => {\n    try {\n        const response = await api.get<VerifyEmailResponse>(`/auth/verify-email?token=${token}`);\n        return response.data; // Typed as VerifyEmailResponse\n    } catch (error: any) {\n        throw new Error(error.response?.data?.error || 'Email verification failed');\n    }\n};\n\n// Get Current User\nexport const getCurrentUser = async (token: string): Promise<UserResponse> => {\n    try {\n        const response = await api.get<UserResponse>('/users/me', {\n            headers: {Authorization: `Bearer ${token}`},\n        });\n        return response.data;\n    } catch (error: any) {\n        throw new Error(error.response?.data?.error || 'Failed to fetch user');\n    }\n};\n\nexport const requestVerification = async (): Promise<{ message: string }> => {\n    try {\n        const token = localStorage.getItem('token');\n        const response = await api.post<{ message: string }>('/auth/request-verification', {}, {\n            headers: {Authorization: `Bearer ${token}`},\n        });\n        return response.data;\n    } catch (error: any) {\n        throw new Error(error.response?.data?.error || 'Failed to request verification');\n    }\n};\n\nexport const approveVerification = async (userId: string): Promise<{ message: string }> => {\n    try {\n        const token = localStorage.getItem('token');\n        const response = await api.post<{ message: string }>('/auth/approve-verification', {userId}, {\n            headers: {Authorization: `Bearer ${token}`},\n        });\n        return response.data;\n    } catch (error: any) {\n        throw new Error(error.response?.data?.error || 'Failed to approve verification');\n    }\n};"],"names":[],"mappings":";;;;;;;;AAAA;;AA4BO,MAAM,eAAe,OACxB,UACA,OACA,UACA;IAEA,IAAI;QACA,MAAM,WAAW,MAAM,yHAAA,CAAA,UAAG,CAAC,IAAI,CAAmB,kBAAkB;YAChE;YACA;YACA;YACA;QACJ;QACA,OAAO,SAAS,IAAI;IACxB,EAAE,OAAO,OAAY;QACjB,IAAI,MAAM,QAAQ,EAAE,MAAM,QAAQ;YAC9B,MAAM,cAAsC,CAAC;YAC7C,MAAM,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;gBAChC,WAAW,CAAC,IAAI,IAAI,IAAI,IAAI,KAAK,CAAC,GAAG,IAAI,GAAG;YAChD;YACA,MAAM;gBAAE;YAAY;QACxB;QACA,MAAM,IAAI,MAAM,MAAM,QAAQ,EAAE,MAAM,SAAS;IACnD;AACJ;AAIO,MAAM,YAAY,OAAO,YAAoB;IAChD,IAAI;QACA,MAAM,WAAW,MAAM,yHAAA,CAAA,UAAG,CAAC,IAAI,CAAgB,eAAe;YAAC;YAAY;QAAQ;QACnF,OAAO,SAAS,IAAI;IACxB,EAAE,OAAO,OAAY;QACjB,MAAM,IAAI,MAAM,MAAM,QAAQ,EAAE,MAAM,SAAS;IACnD;AACJ;AAGO,MAAM,cAAc,OAAO;IAC9B,IAAI;QACA,MAAM,WAAW,MAAM,yHAAA,CAAA,UAAG,CAAC,GAAG,CAAsB,CAAC,yBAAyB,EAAE,OAAO;QACvF,OAAO,SAAS,IAAI,EAAE,+BAA+B;IACzD,EAAE,OAAO,OAAY;QACjB,MAAM,IAAI,MAAM,MAAM,QAAQ,EAAE,MAAM,SAAS;IACnD;AACJ;AAGO,MAAM,iBAAiB,OAAO;IACjC,IAAI;QACA,MAAM,WAAW,MAAM,yHAAA,CAAA,UAAG,CAAC,GAAG,CAAe,aAAa;YACtD,SAAS;gBAAC,eAAe,CAAC,OAAO,EAAE,OAAO;YAAA;QAC9C;QACA,OAAO,SAAS,IAAI;IACxB,EAAE,OAAO,OAAY;QACjB,MAAM,IAAI,MAAM,MAAM,QAAQ,EAAE,MAAM,SAAS;IACnD;AACJ;AAEO,MAAM,sBAAsB;IAC/B,IAAI;QACA,MAAM,QAAQ,aAAa,OAAO,CAAC;QACnC,MAAM,WAAW,MAAM,yHAAA,CAAA,UAAG,CAAC,IAAI,CAAsB,8BAA8B,CAAC,GAAG;YACnF,SAAS;gBAAC,eAAe,CAAC,OAAO,EAAE,OAAO;YAAA;QAC9C;QACA,OAAO,SAAS,IAAI;IACxB,EAAE,OAAO,OAAY;QACjB,MAAM,IAAI,MAAM,MAAM,QAAQ,EAAE,MAAM,SAAS;IACnD;AACJ;AAEO,MAAM,sBAAsB,OAAO;IACtC,IAAI;QACA,MAAM,QAAQ,aAAa,OAAO,CAAC;QACnC,MAAM,WAAW,MAAM,yHAAA,CAAA,UAAG,CAAC,IAAI,CAAsB,8BAA8B;YAAC;QAAM,GAAG;YACzF,SAAS;gBAAC,eAAe,CAAC,OAAO,EAAE,OAAO;YAAA;QAC9C;QACA,OAAO,SAAS,IAAI;IACxB,EAAE,OAAO,OAAY;QACjB,MAAM,IAAI,MAAM,MAAM,QAAQ,EAAE,MAAM,SAAS;IACnD;AACJ"}},
    {"offset": {"line": 126, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 132, "column": 0}, "map": {"version":3,"sources":["file:///app/app/login/page.tsx"],"sourcesContent":["'use client';\nimport {useEffect, useState} from 'react';\nimport {loginUser} from '@/services/auth';\nimport Link from 'next/link';\nimport {CheckCircleIcon, KeyIcon, LockClosedIcon, UserIcon, XCircleIcon} from '@heroicons/react/24/outline';\n\nexport default function LoginPage() {\n    const [identifier, setIdentifier] = useState<string>('');\n    const [password, setPassword] = useState<string>('');\n    const [error, setError] = useState<string>('');\n    const [message, setMessage] = useState<string>('');\n    const [isExitingError, setIsExitingError] = useState(false);\n    const [isExitingMessage, setIsExitingMessage] = useState(false);\n\n    const handleLogin = async (e: React.FormEvent) => {\n        e.preventDefault();\n        setError('');\n        setMessage('');\n        setIsExitingError(false);\n        setIsExitingMessage(false);\n        try {\n            const data = await loginUser(identifier, password);\n            localStorage.setItem('token', data.token);\n            setMessage('Login successful! Redirecting...');\n            setTimeout(() => window.location.href = '/dashboard', 1000);\n        } catch (err: any) {\n            setError(err.message || 'Login failed');\n        }\n    };\n\n    useEffect(() => {\n        if (error && !isExitingError) {\n            const timer = setTimeout(() => {\n                setIsExitingError(true);\n                setTimeout(() => setError(''), 500);\n            }, 3000);\n            return () => clearTimeout(timer);\n        }\n    }, [error, isExitingError]);\n\n    useEffect(() => {\n        if (message && !isExitingMessage) {\n            const timer = setTimeout(() => {\n                setIsExitingMessage(true);\n                setTimeout(() => setMessage(''), 500);\n            }, 3000);\n            return () => clearTimeout(timer);\n        }\n    }, [message, isExitingMessage]);\n\n    return (\n        <div className=\"min-h-screen bg-gray-100 dark:bg-gray-900 flex items-center justify-center\">\n            <div\n                className=\"bg-gray-50 dark:bg-gray-800 p-8 rounded-lg text-center animate-fadeIn max-w-md w-full mx-4 my-8\">\n                <h1 className=\"text-3xl font-bold text-gray-900 dark:text-gray-100 mb-6 flex items-center justify-center\">\n                    <KeyIcon className=\"h-6 w-6 mr-2 text-gray-400\"/>\n                    Login\n                </h1>\n                <form onSubmit={handleLogin} className=\"space-y-4\">\n                    <div className=\"relative\">\n                        <UserIcon className=\"absolute left-3 top-1/2 transform -translate-y-1/2 h-5 w-5 text-gray-400\"/>\n                        <input\n                            type=\"text\"\n                            value={identifier}\n                            onChange={(e) => setIdentifier(e.target.value)}\n                            placeholder=\"Email or Username\"\n                            className=\"w-full pl-10 p-3 bg-gray-200 dark:bg-gray-700 text-gray-900 dark:text-gray-100 rounded-md focus:outline-none focus:ring-2 focus:ring-slate-600 dark:focus:ring-slate-500 transition duration-200\"\n                        />\n                    </div>\n                    <div className=\"relative\">\n                        <LockClosedIcon\n                            className=\"absolute left-3 top-1/2 transform -translate-y-1/2 h-5 w-5 text-gray-400\"/>\n                        <input\n                            type=\"password\"\n                            value={password}\n                            onChange={(e) => setPassword(e.target.value)}\n                            placeholder=\"Password\"\n                            className=\"w-full pl-10 p-3 bg-gray-200 dark:bg-gray-700 text-gray-900 dark:text-gray-100 rounded-md focus:outline-none focus:ring-2 focus:ring-slate-600 dark:focus:ring-slate-500 transition duration-200\"\n                        />\n                    </div>\n                    <button\n                        type=\"submit\"\n                        className=\"w-full bg-slate-600 dark:bg-slate-500 text-white dark:text-gray-900 p-3 rounded-md hover:bg-slate-500 dark:hover:bg-slate-400 transition duration-200\"\n                    >\n                        Login\n                    </button>\n                    {error && (\n                        <p className={`bg-red-100 dark:bg-red-900 text-red-800 dark:text-red-200 text-sm p-2 rounded-md animate-fadeInShort flex items-center transition-opacity duration-500 ${isExitingError ? 'opacity-0' : 'opacity-100'}`}>\n                            <XCircleIcon className=\"h-5 w-5 mr-2 text-red-800 dark:text-red-200\"/>\n                            {error}\n                        </p>\n                    )}\n                    {message && (\n                        <p className={`bg-green-100 dark:bg-green-900 text-green-800 dark:text-green-200 text-sm p-2 rounded-md animate-fadeInShort flex items-center transition-opacity duration-500 ${isExitingMessage ? 'opacity-0' : 'opacity-100'}`}>\n                            <CheckCircleIcon className=\"h-5 w-5 mr-2 text-green-800 dark:text-green-200\"/>\n                            {message}\n                        </p>\n                    )}\n                </form>\n                <p className=\"mt-4 text-sm text-gray-900 dark:text-gray-100\">\n                    Don’t have an account?{' '}\n                    <Link href=\"/register\"\n                          className=\"text-slate-600 dark:text-slate-500 hover:text-slate-400 dark:hover:text-slate-300 hover:underline transition duration-200\">\n                        Register\n                    </Link>\n                </p>\n            </div>\n        </div>\n    );\n}"],"names":[],"mappings":"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"}},
    {"offset": {"line": 382, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}